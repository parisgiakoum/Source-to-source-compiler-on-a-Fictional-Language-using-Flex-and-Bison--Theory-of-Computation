// Thia is a correct program having two subrprograms in order to test almost every aspect of fl!

program useless;

// Defines array size
@defmacro N 1000	

type
	string = array of char;
	
var 
	i, j: integer;
	item: string;
	

// Fuction allowing power operations
function powerTo(number: real; power: integer) : real;

begin
	result := 1;
	if power > 0 then begin
		for i := 0 to power-1 do
			result := result * number
	end
	else if power < 0 then begin
		for i := 0 downto power+1 do 
			result:= (real) result/number
	end
		else result := 1;
	return
end;

// Prints shopping list
procedure printShoppingList(i : integer; shoppingList: array [N] of string; priceList: array [N] of real; sum : real);

begin
writeString('\n\nShopping list:\n');
	for j := 0 to i-1 do begin
		writeInteger(j+1);
		writeString(':\tItem:\t\"');
		writeString(shoppingList);
		writeString('\"\n\tPrice:\t');
		writeReal(priceList[j]);
		writeString('€\n\n');
		shoppingList := shoppingList + 1
	end;
	writeString("\nTotal Price: ");
	writeReal(sum);
	writeString('€\n')
end;

// Procedure used to create a shopping list of up to 1000 items
procedure shopping();

var
	shoppingList: array [N] of string;
	priceList: array [N] of real;
	tempString: string;
	sum : real;
	exit: integer;
	
begin
	i := 0;
	sum := 0;
	repeat begin
		writeString("Give me an item: ");
		tempString := readString();
		shoppingList[i] := tempString;
		writeString("\n");
		writeString("Give me its price in €: ");
		priceList[i] := readReal();
		writeString("\n");
		sum := sum + priceList[i];
		i := i + 1;
		
		// Exit functionality - uses goto to request right input
		label: writeString("\nPress 0 to exit ot 1 to continue: ");
		exit := readInteger();
		writeString("\n");
		if exit <> 1 and exit <> 0 then begin
			writeString("Wrong input!\n");
			goto label
		end
	end
	until exit = 0;
	
	printShoppingList(i, shoppingList, priceList, sum)
end;

// Menu
procedure menu();
var
	power: function(x:real; y: integer): real;
	choice, temp2: integer;
	temp1: real;
begin
	lbl: choice := -1;
	writeString('\nMenu:\nSelect equivalent option:\n\t1: Power operation\n\t2: Make a shopping list!\n\t3: Exit\n\nChoice: ');
	lbl2: choice := readInteger();
	if choice > 3 || choice < 1 then begin
		writeString('\nWrong choice! Try again: ');
		goto lbl2
	end;
	if choice = 1 then begin
		writeString("\nGive me the base(positive or negative number): ");
		temp1 := readReal();
		writeString("\nGive me the power(positive or negative integer): ");
		temp2 := readInteger();
		writeString('\n');
		writeReal(temp1);
		writeString(' ^ ');
		writeInteger(temp2);
		writeString(' = ');
		power := powerTo;
		writeReal(power(temp1, temp2));
		writeString('\n');
		goto lbl
	end
	else if choice = 2 then begin
		shopping();
		goto lbl
	end
	else writeString('\nHope to see you again!\n')
end;
	
// Main
begin
	menu()	
end.