Grammar

    0 $accept: program $end

    1 program: program_decl type_declaration var_declaration subroutine_decl_list main_body '.'

    2 program_decl: KW_PROGRAM IDENT ';'

    3 main_body: KW_BEGIN statements KW_END

    4 body: KW_BEGIN statements KW_END

    5 statements: %empty
    6           | statement_list

    7 statement_list: statement
    8               | statement_list ';' statement

    9 statement: proc_call
   10          | instruction

   11 proc_call: IDENT '(' arguments ')'

   12 arguments: %empty
   13          | arglist

   14 arglist: expression
   15        | arglist ',' expression

   16 expression: POSINT
   17           | REAL
   18           | IDENT array_call
   19           | KW_RESULT
   20           | KW_TRUE
   21           | KW_FALSE
   22           | STRING
   23           | '(' expression ')'
   24           | CAST_INTEGER expression
   25           | CAST_BOOLEAN expression
   26           | CAST_CHAR expression
   27           | CAST_REAL expression
   28           | expression '+' expression
   29           | expression '-' expression
   30           | expression '*' expression
   31           | expression '/' expression
   32           | expression KW_DIV expression
   33           | expression KW_MOD expression
   34           | KW_NOT expression
   35           | '-' expression
   36           | '+' expression
   37           | expression '=' expression
   38           | expression OP_INEQUAL expression
   39           | expression '<' expression
   40           | expression '>' expression
   41           | expression OP_LESSEQ expression
   42           | expression OP_GREATEREQ expression
   43           | expression KW_AND expression
   44           | expression KW_OR expression
   45           | proc_call

   46 data_type: basic_data_type
   47          | array_of_type

   48 basic_data_type: KW_INTEGER
   49                | KW_BOOLEAN
   50                | KW_CHAR
   51                | KW_REAL
   52                | IDENT

   53 array_of_type: KW_ARRAY KW_OF basic_data_type

   54 type_declaration: %empty
   55                 | KW_TYPE type_decl_list

   56 type_decl_list: type_decl
   57               | type_decl_list type_decl

   58 type_decl: IDENT '=' data_type ';'
   59          | IDENT '=' KW_ARRAY array_size KW_OF basic_data_type ';'
   60          | IDENT '=' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type ';'
   61          | IDENT '=' KW_FUNCTION '(' ')' ':' data_type ';'

   62 var_declaration: %empty
   63                | KW_VAR var_decl_list ';'

   64 var_decl_list: var_decl
   65              | var_decl_list ';' var_decl

   66 var_decl: var_ident ':' data_type
   67         | var_ident ':' KW_ARRAY array_size KW_OF basic_data_type
   68         | var_ident ':' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type
   69         | var_ident ':' KW_FUNCTION '(' ')' ':' data_type

   70 subroutine_decl_list: %empty
   71                     | subroutine_decl_list subroutine

   72 subroutine: subroutine_decl type_declaration var_declaration subroutine_decl_list subroutine_body ';'

   73 subroutine_decl: KW_PROCEDURE IDENT '(' sub_arg_decl_list ')' ';'
   74                | KW_PROCEDURE IDENT '(' ')' ';'
   75                | KW_FUNCTION IDENT '(' sub_arg_decl_list ')' ':' data_type ';'
   76                | KW_FUNCTION IDENT '(' ')' ':' data_type ';'

   77 sub_arg_decl_list: sub_arg_decl
   78                  | sub_arg_decl_list ';' sub_arg_decl

   79 sub_arg_decl: var_ident ':' data_type
   80             | var_ident ':' KW_ARRAY array_size KW_OF basic_data_type
   81             | var_ident ':' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type
   82             | var_ident ':' KW_FUNCTION '(' ')' ':' data_type

   83 subroutine_body: KW_BEGIN statements KW_END

   84 var_ident: IDENT
   85          | IDENT ',' var_ident

   86 array_call: %empty
   87           | array_size

   88 array_size: '[' expression ']'
   89           | '[' expression ']' array_size

   90 instruction: body
   91            | IDENT array_call ASSIGN expression
   92            | KW_RESULT ASSIGN expression
   93            | KW_IF expression KW_THEN statement
   94            | KW_IF expression KW_THEN statement KW_ELSE statement
   95            | KW_FOR IDENT array_call ASSIGN expression KW_TO expression KW_DO statement
   96            | KW_FOR IDENT array_call ASSIGN expression KW_DOWNTO expression KW_DO statement
   97            | KW_WHILE expression KW_DO statement
   98            | KW_REPEAT statement KW_UNTIL expression
   99            | IDENT ':' statement
  100            | KW_GOTO IDENT
  101            | KW_RETURN
  102            | IDENT array_call ASSIGN LIB_RS '(' ')'
  103            | IDENT array_call ASSIGN LIB_RI '(' ')'
  104            | IDENT array_call ASSIGN LIB_RR '(' ')'
  105            | KW_RESULT ASSIGN LIB_RS '(' ')'
  106            | KW_RESULT ASSIGN LIB_RI '(' ')'
  107            | KW_RESULT ASSIGN LIB_RR '(' ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 11 23 60 61 68 69 73 74 75 76 81 82 102 103 104 105 106 107
')' (41) 11 23 60 61 68 69 73 74 75 76 81 82 102 103 104 105 106 107
'*' (42) 30
'+' (43) 28 36
',' (44) 15 85
'-' (45) 29 35
'.' (46) 1
'/' (47) 31
':' (58) 60 61 66 67 68 69 75 76 79 80 81 82 99
';' (59) 2 8 58 59 60 61 63 65 72 73 74 75 76 78
'<' (60) 39
'=' (61) 37 58 59 60 61
'>' (62) 40
'[' (91) 88 89
']' (93) 88 89
error (256)
IDENT (258) 2 11 18 52 58 59 60 61 73 74 75 76 84 85 91 95 96 99 100
    102 103 104
POSINT (259) 16
REAL (260) 17
STRING (261) 22
KW_PROGRAM (262) 2
KW_BEGIN (263) 3 4 83
KW_END (264) 3 4 83
KW_AND (265) 43
KW_DIV (266) 32
KW_FUNCTION (267) 60 61 68 69 75 76 81 82
KW_MOD (268) 33
KW_PROCEDURE (269) 73 74
KW_RESULT (270) 19 92 105 106 107
KW_ARRAY (271) 53 59 67 80
KW_DO (272) 95 96 97
KW_GOTO (273) 100
KW_NOT (274) 34
KW_RETURN (275) 101
KW_BOOLEAN (276) 49
KW_ELSE (277) 94
KW_IF (278) 93 94
KW_OF (279) 53 59 67 80
KW_REAL (280) 51
KW_THEN (281) 93 94
KW_CHAR (282) 50
KW_FOR (283) 95 96
KW_INTEGER (284) 48
KW_OR (285) 44
KW_REPEAT (286) 98
KW_UNTIL (287) 98
KW_VAR (288) 63
KW_WHILE (289) 97
KW_TO (290) 95
KW_DOWNTO (291) 96
KW_TYPE (292) 55
LIB_RS (293) 102 105
LIB_RI (294) 103 106
LIB_RR (295) 104 107
KW_TRUE (296) 20
KW_FALSE (297) 21
CAST_INTEGER (298) 24
CAST_BOOLEAN (299) 25
CAST_CHAR (300) 26
CAST_REAL (301) 27
OP_INEQUAL (302) 38
OP_LESSEQ (303) 41
OP_GREATEREQ (304) 42
ASSIGN (305) 91 92 95 96 102 103 104 105 106 107
UMINUS (306)
UPLUS (307)


Nonterminals, with rules where they appear

$accept (68)
    on left: 0
program (69)
    on left: 1, on right: 0
program_decl (70)
    on left: 2, on right: 1
main_body (71)
    on left: 3, on right: 1
body (72)
    on left: 4, on right: 90
statements (73)
    on left: 5 6, on right: 3 4 83
statement_list (74)
    on left: 7 8, on right: 6 8
statement (75)
    on left: 9 10, on right: 7 8 93 94 95 96 97 98 99
proc_call (76)
    on left: 11, on right: 9 45
arguments (77)
    on left: 12 13, on right: 11
arglist (78)
    on left: 14 15, on right: 13 15
expression (79)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
    34 35 36 37 38 39 40 41 42 43 44 45, on right: 14 15 23 24 25 26
    27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 88 89 91
    92 93 94 95 96 97 98
data_type (80)
    on left: 46 47, on right: 58 60 61 66 68 69 75 76 79 81 82
basic_data_type (81)
    on left: 48 49 50 51 52, on right: 46 53 59 67 80
array_of_type (82)
    on left: 53, on right: 47
type_declaration (83)
    on left: 54 55, on right: 1 72
type_decl_list (84)
    on left: 56 57, on right: 55 57
type_decl (85)
    on left: 58 59 60 61, on right: 56 57
var_declaration (86)
    on left: 62 63, on right: 1 72
var_decl_list (87)
    on left: 64 65, on right: 63 65
var_decl (88)
    on left: 66 67 68 69, on right: 64 65
subroutine_decl_list (89)
    on left: 70 71, on right: 1 71 72
subroutine (90)
    on left: 72, on right: 71
subroutine_decl (91)
    on left: 73 74 75 76, on right: 72
sub_arg_decl_list (92)
    on left: 77 78, on right: 60 68 73 75 78 81
sub_arg_decl (93)
    on left: 79 80 81 82, on right: 77 78
subroutine_body (94)
    on left: 83, on right: 72
var_ident (95)
    on left: 84 85, on right: 66 67 68 69 79 80 81 82 85
array_call (96)
    on left: 86 87, on right: 18 91 95 96 102 103 104
array_size (97)
    on left: 88 89, on right: 59 67 80 87 89
instruction (98)
    on left: 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105
    106 107, on right: 10


State 0

    0 $accept: . program $end
    1 program: . program_decl type_declaration var_declaration subroutine_decl_list main_body '.'
    2 program_decl: . KW_PROGRAM IDENT ';'

    KW_PROGRAM  shift, and go to state 1

    program       go to state 2
    program_decl  go to state 3


State 1

    2 program_decl: KW_PROGRAM . IDENT ';'

    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: program_decl . type_declaration var_declaration subroutine_decl_list main_body '.'
   54 type_declaration: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE, KW_VAR]
   55                 | . KW_TYPE type_decl_list

    KW_TYPE  shift, and go to state 6

    $default  reduce using rule 54 (type_declaration)

    type_declaration  go to state 7


State 4

    2 program_decl: KW_PROGRAM IDENT . ';'

    ';'  shift, and go to state 8


State 5

    0 $accept: program $end .

    $default  accept


State 6

   55 type_declaration: KW_TYPE . type_decl_list
   56 type_decl_list: . type_decl
   57               | . type_decl_list type_decl
   58 type_decl: . IDENT '=' data_type ';'
   59          | . IDENT '=' KW_ARRAY array_size KW_OF basic_data_type ';'
   60          | . IDENT '=' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type ';'
   61          | . IDENT '=' KW_FUNCTION '(' ')' ':' data_type ';'

    IDENT  shift, and go to state 9

    type_decl_list  go to state 10
    type_decl       go to state 11


State 7

    1 program: program_decl type_declaration . var_declaration subroutine_decl_list main_body '.'
   62 var_declaration: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   63                | . KW_VAR var_decl_list ';'

    KW_VAR  shift, and go to state 12

    $default  reduce using rule 62 (var_declaration)

    var_declaration  go to state 13


State 8

    2 program_decl: KW_PROGRAM IDENT ';' .

    $default  reduce using rule 2 (program_decl)


State 9

   58 type_decl: IDENT . '=' data_type ';'
   59          | IDENT . '=' KW_ARRAY array_size KW_OF basic_data_type ';'
   60          | IDENT . '=' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type ';'
   61          | IDENT . '=' KW_FUNCTION '(' ')' ':' data_type ';'

    '='  shift, and go to state 14


State 10

   55 type_declaration: KW_TYPE type_decl_list .  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE, KW_VAR]
   57 type_decl_list: type_decl_list . type_decl
   58 type_decl: . IDENT '=' data_type ';'
   59          | . IDENT '=' KW_ARRAY array_size KW_OF basic_data_type ';'
   60          | . IDENT '=' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type ';'
   61          | . IDENT '=' KW_FUNCTION '(' ')' ':' data_type ';'

    IDENT  shift, and go to state 9

    $default  reduce using rule 55 (type_declaration)

    type_decl  go to state 15


State 11

   56 type_decl_list: type_decl .

    $default  reduce using rule 56 (type_decl_list)


State 12

   63 var_declaration: KW_VAR . var_decl_list ';'
   64 var_decl_list: . var_decl
   65              | . var_decl_list ';' var_decl
   66 var_decl: . var_ident ':' data_type
   67         | . var_ident ':' KW_ARRAY array_size KW_OF basic_data_type
   68         | . var_ident ':' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type
   69         | . var_ident ':' KW_FUNCTION '(' ')' ':' data_type
   84 var_ident: . IDENT
   85          | . IDENT ',' var_ident

    IDENT  shift, and go to state 16

    var_decl_list  go to state 17
    var_decl       go to state 18
    var_ident      go to state 19


State 13

    1 program: program_decl type_declaration var_declaration . subroutine_decl_list main_body '.'
   70 subroutine_decl_list: . %empty
   71                     | . subroutine_decl_list subroutine

    $default  reduce using rule 70 (subroutine_decl_list)

    subroutine_decl_list  go to state 20


State 14

   46 data_type: . basic_data_type
   47          | . array_of_type
   48 basic_data_type: . KW_INTEGER
   49                | . KW_BOOLEAN
   50                | . KW_CHAR
   51                | . KW_REAL
   52                | . IDENT
   53 array_of_type: . KW_ARRAY KW_OF basic_data_type
   58 type_decl: IDENT '=' . data_type ';'
   59          | IDENT '=' . KW_ARRAY array_size KW_OF basic_data_type ';'
   60          | IDENT '=' . KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type ';'
   61          | IDENT '=' . KW_FUNCTION '(' ')' ':' data_type ';'

    IDENT        shift, and go to state 21
    KW_FUNCTION  shift, and go to state 22
    KW_ARRAY     shift, and go to state 23
    KW_BOOLEAN   shift, and go to state 24
    KW_REAL      shift, and go to state 25
    KW_CHAR      shift, and go to state 26
    KW_INTEGER   shift, and go to state 27

    data_type        go to state 28
    basic_data_type  go to state 29
    array_of_type    go to state 30


State 15

   57 type_decl_list: type_decl_list type_decl .

    $default  reduce using rule 57 (type_decl_list)


State 16

   84 var_ident: IDENT .  [':']
   85          | IDENT . ',' var_ident

    ','  shift, and go to state 31

    $default  reduce using rule 84 (var_ident)


State 17

   63 var_declaration: KW_VAR var_decl_list . ';'
   65 var_decl_list: var_decl_list . ';' var_decl

    ';'  shift, and go to state 32


State 18

   64 var_decl_list: var_decl .

    $default  reduce using rule 64 (var_decl_list)


State 19

   66 var_decl: var_ident . ':' data_type
   67         | var_ident . ':' KW_ARRAY array_size KW_OF basic_data_type
   68         | var_ident . ':' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type
   69         | var_ident . ':' KW_FUNCTION '(' ')' ':' data_type

    ':'  shift, and go to state 33


State 20

    1 program: program_decl type_declaration var_declaration subroutine_decl_list . main_body '.'
    3 main_body: . KW_BEGIN statements KW_END
   71 subroutine_decl_list: subroutine_decl_list . subroutine
   72 subroutine: . subroutine_decl type_declaration var_declaration subroutine_decl_list subroutine_body ';'
   73 subroutine_decl: . KW_PROCEDURE IDENT '(' sub_arg_decl_list ')' ';'
   74                | . KW_PROCEDURE IDENT '(' ')' ';'
   75                | . KW_FUNCTION IDENT '(' sub_arg_decl_list ')' ':' data_type ';'
   76                | . KW_FUNCTION IDENT '(' ')' ':' data_type ';'

    KW_BEGIN      shift, and go to state 34
    KW_FUNCTION   shift, and go to state 35
    KW_PROCEDURE  shift, and go to state 36

    main_body        go to state 37
    subroutine       go to state 38
    subroutine_decl  go to state 39


State 21

   52 basic_data_type: IDENT .

    $default  reduce using rule 52 (basic_data_type)


State 22

   60 type_decl: IDENT '=' KW_FUNCTION . '(' sub_arg_decl_list ')' ':' data_type ';'
   61          | IDENT '=' KW_FUNCTION . '(' ')' ':' data_type ';'

    '('  shift, and go to state 40


State 23

   53 array_of_type: KW_ARRAY . KW_OF basic_data_type
   59 type_decl: IDENT '=' KW_ARRAY . array_size KW_OF basic_data_type ';'
   88 array_size: . '[' expression ']'
   89           | . '[' expression ']' array_size

    KW_OF  shift, and go to state 41
    '['    shift, and go to state 42

    array_size  go to state 43


State 24

   49 basic_data_type: KW_BOOLEAN .

    $default  reduce using rule 49 (basic_data_type)


State 25

   51 basic_data_type: KW_REAL .

    $default  reduce using rule 51 (basic_data_type)


State 26

   50 basic_data_type: KW_CHAR .

    $default  reduce using rule 50 (basic_data_type)


State 27

   48 basic_data_type: KW_INTEGER .

    $default  reduce using rule 48 (basic_data_type)


State 28

   58 type_decl: IDENT '=' data_type . ';'

    ';'  shift, and go to state 44


State 29

   46 data_type: basic_data_type .

    $default  reduce using rule 46 (data_type)


State 30

   47 data_type: array_of_type .

    $default  reduce using rule 47 (data_type)


State 31

   84 var_ident: . IDENT
   85          | . IDENT ',' var_ident
   85          | IDENT ',' . var_ident

    IDENT  shift, and go to state 16

    var_ident  go to state 45


State 32

   63 var_declaration: KW_VAR var_decl_list ';' .  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   65 var_decl_list: var_decl_list ';' . var_decl
   66 var_decl: . var_ident ':' data_type
   67         | . var_ident ':' KW_ARRAY array_size KW_OF basic_data_type
   68         | . var_ident ':' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type
   69         | . var_ident ':' KW_FUNCTION '(' ')' ':' data_type
   84 var_ident: . IDENT
   85          | . IDENT ',' var_ident

    IDENT  shift, and go to state 16

    $default  reduce using rule 63 (var_declaration)

    var_decl   go to state 46
    var_ident  go to state 19


State 33

   46 data_type: . basic_data_type
   47          | . array_of_type
   48 basic_data_type: . KW_INTEGER
   49                | . KW_BOOLEAN
   50                | . KW_CHAR
   51                | . KW_REAL
   52                | . IDENT
   53 array_of_type: . KW_ARRAY KW_OF basic_data_type
   66 var_decl: var_ident ':' . data_type
   67         | var_ident ':' . KW_ARRAY array_size KW_OF basic_data_type
   68         | var_ident ':' . KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type
   69         | var_ident ':' . KW_FUNCTION '(' ')' ':' data_type

    IDENT        shift, and go to state 21
    KW_FUNCTION  shift, and go to state 47
    KW_ARRAY     shift, and go to state 48
    KW_BOOLEAN   shift, and go to state 24
    KW_REAL      shift, and go to state 25
    KW_CHAR      shift, and go to state 26
    KW_INTEGER   shift, and go to state 27

    data_type        go to state 49
    basic_data_type  go to state 29
    array_of_type    go to state 30


State 34

    3 main_body: KW_BEGIN . statements KW_END
    4 body: . KW_BEGIN statements KW_END
    5 statements: . %empty  [KW_END]
    6           | . statement_list
    7 statement_list: . statement
    8               | . statement_list ';' statement
    9 statement: . proc_call
   10          | . instruction
   11 proc_call: . IDENT '(' arguments ')'
   90 instruction: . body
   91            | . IDENT array_call ASSIGN expression
   92            | . KW_RESULT ASSIGN expression
   93            | . KW_IF expression KW_THEN statement
   94            | . KW_IF expression KW_THEN statement KW_ELSE statement
   95            | . KW_FOR IDENT array_call ASSIGN expression KW_TO expression KW_DO statement
   96            | . KW_FOR IDENT array_call ASSIGN expression KW_DOWNTO expression KW_DO statement
   97            | . KW_WHILE expression KW_DO statement
   98            | . KW_REPEAT statement KW_UNTIL expression
   99            | . IDENT ':' statement
  100            | . KW_GOTO IDENT
  101            | . KW_RETURN
  102            | . IDENT array_call ASSIGN LIB_RS '(' ')'
  103            | . IDENT array_call ASSIGN LIB_RI '(' ')'
  104            | . IDENT array_call ASSIGN LIB_RR '(' ')'
  105            | . KW_RESULT ASSIGN LIB_RS '(' ')'
  106            | . KW_RESULT ASSIGN LIB_RI '(' ')'
  107            | . KW_RESULT ASSIGN LIB_RR '(' ')'

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 51
    KW_RESULT  shift, and go to state 52
    KW_GOTO    shift, and go to state 53
    KW_RETURN  shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    $default  reduce using rule 5 (statements)

    body            go to state 59
    statements      go to state 60
    statement_list  go to state 61
    statement       go to state 62
    proc_call       go to state 63
    instruction     go to state 64


State 35

   75 subroutine_decl: KW_FUNCTION . IDENT '(' sub_arg_decl_list ')' ':' data_type ';'
   76                | KW_FUNCTION . IDENT '(' ')' ':' data_type ';'

    IDENT  shift, and go to state 65


State 36

   73 subroutine_decl: KW_PROCEDURE . IDENT '(' sub_arg_decl_list ')' ';'
   74                | KW_PROCEDURE . IDENT '(' ')' ';'

    IDENT  shift, and go to state 66


State 37

    1 program: program_decl type_declaration var_declaration subroutine_decl_list main_body . '.'

    '.'  shift, and go to state 67


State 38

   71 subroutine_decl_list: subroutine_decl_list subroutine .

    $default  reduce using rule 71 (subroutine_decl_list)


State 39

   54 type_declaration: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE, KW_VAR]
   55                 | . KW_TYPE type_decl_list
   72 subroutine: subroutine_decl . type_declaration var_declaration subroutine_decl_list subroutine_body ';'

    KW_TYPE  shift, and go to state 6

    $default  reduce using rule 54 (type_declaration)

    type_declaration  go to state 68


State 40

   60 type_decl: IDENT '=' KW_FUNCTION '(' . sub_arg_decl_list ')' ':' data_type ';'
   61          | IDENT '=' KW_FUNCTION '(' . ')' ':' data_type ';'
   77 sub_arg_decl_list: . sub_arg_decl
   78                  | . sub_arg_decl_list ';' sub_arg_decl
   79 sub_arg_decl: . var_ident ':' data_type
   80             | . var_ident ':' KW_ARRAY array_size KW_OF basic_data_type
   81             | . var_ident ':' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type
   82             | . var_ident ':' KW_FUNCTION '(' ')' ':' data_type
   84 var_ident: . IDENT
   85          | . IDENT ',' var_ident

    IDENT  shift, and go to state 16
    ')'    shift, and go to state 69

    sub_arg_decl_list  go to state 70
    sub_arg_decl       go to state 71
    var_ident          go to state 72


State 41

   48 basic_data_type: . KW_INTEGER
   49                | . KW_BOOLEAN
   50                | . KW_CHAR
   51                | . KW_REAL
   52                | . IDENT
   53 array_of_type: KW_ARRAY KW_OF . basic_data_type

    IDENT       shift, and go to state 21
    KW_BOOLEAN  shift, and go to state 24
    KW_REAL     shift, and go to state 25
    KW_CHAR     shift, and go to state 26
    KW_INTEGER  shift, and go to state 27

    basic_data_type  go to state 73


State 42

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call
   88 array_size: '[' . expression ']'
   89           | '[' . expression ']' array_size

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 90


State 43

   59 type_decl: IDENT '=' KW_ARRAY array_size . KW_OF basic_data_type ';'

    KW_OF  shift, and go to state 91


State 44

   58 type_decl: IDENT '=' data_type ';' .

    $default  reduce using rule 58 (type_decl)


State 45

   85 var_ident: IDENT ',' var_ident .

    $default  reduce using rule 85 (var_ident)


State 46

   65 var_decl_list: var_decl_list ';' var_decl .

    $default  reduce using rule 65 (var_decl_list)


State 47

   68 var_decl: var_ident ':' KW_FUNCTION . '(' sub_arg_decl_list ')' ':' data_type
   69         | var_ident ':' KW_FUNCTION . '(' ')' ':' data_type

    '('  shift, and go to state 92


State 48

   53 array_of_type: KW_ARRAY . KW_OF basic_data_type
   67 var_decl: var_ident ':' KW_ARRAY . array_size KW_OF basic_data_type
   88 array_size: . '[' expression ']'
   89           | . '[' expression ']' array_size

    KW_OF  shift, and go to state 41
    '['    shift, and go to state 42

    array_size  go to state 93


State 49

   66 var_decl: var_ident ':' data_type .

    $default  reduce using rule 66 (var_decl)


State 50

   11 proc_call: IDENT . '(' arguments ')'
   86 array_call: . %empty  [ASSIGN]
   87           | . array_size
   88 array_size: . '[' expression ']'
   89           | . '[' expression ']' array_size
   91 instruction: IDENT . array_call ASSIGN expression
   99            | IDENT . ':' statement
  102            | IDENT . array_call ASSIGN LIB_RS '(' ')'
  103            | IDENT . array_call ASSIGN LIB_RI '(' ')'
  104            | IDENT . array_call ASSIGN LIB_RR '(' ')'

    '('  shift, and go to state 94
    ':'  shift, and go to state 95
    '['  shift, and go to state 42

    $default  reduce using rule 86 (array_call)

    array_call  go to state 96
    array_size  go to state 97


State 51

    4 body: . KW_BEGIN statements KW_END
    4     | KW_BEGIN . statements KW_END
    5 statements: . %empty  [KW_END]
    6           | . statement_list
    7 statement_list: . statement
    8               | . statement_list ';' statement
    9 statement: . proc_call
   10          | . instruction
   11 proc_call: . IDENT '(' arguments ')'
   90 instruction: . body
   91            | . IDENT array_call ASSIGN expression
   92            | . KW_RESULT ASSIGN expression
   93            | . KW_IF expression KW_THEN statement
   94            | . KW_IF expression KW_THEN statement KW_ELSE statement
   95            | . KW_FOR IDENT array_call ASSIGN expression KW_TO expression KW_DO statement
   96            | . KW_FOR IDENT array_call ASSIGN expression KW_DOWNTO expression KW_DO statement
   97            | . KW_WHILE expression KW_DO statement
   98            | . KW_REPEAT statement KW_UNTIL expression
   99            | . IDENT ':' statement
  100            | . KW_GOTO IDENT
  101            | . KW_RETURN
  102            | . IDENT array_call ASSIGN LIB_RS '(' ')'
  103            | . IDENT array_call ASSIGN LIB_RI '(' ')'
  104            | . IDENT array_call ASSIGN LIB_RR '(' ')'
  105            | . KW_RESULT ASSIGN LIB_RS '(' ')'
  106            | . KW_RESULT ASSIGN LIB_RI '(' ')'
  107            | . KW_RESULT ASSIGN LIB_RR '(' ')'

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 51
    KW_RESULT  shift, and go to state 52
    KW_GOTO    shift, and go to state 53
    KW_RETURN  shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    $default  reduce using rule 5 (statements)

    body            go to state 59
    statements      go to state 98
    statement_list  go to state 61
    statement       go to state 62
    proc_call       go to state 63
    instruction     go to state 64


State 52

   92 instruction: KW_RESULT . ASSIGN expression
  105            | KW_RESULT . ASSIGN LIB_RS '(' ')'
  106            | KW_RESULT . ASSIGN LIB_RI '(' ')'
  107            | KW_RESULT . ASSIGN LIB_RR '(' ')'

    ASSIGN  shift, and go to state 99


State 53

  100 instruction: KW_GOTO . IDENT

    IDENT  shift, and go to state 100


State 54

  101 instruction: KW_RETURN .

    $default  reduce using rule 101 (instruction)


State 55

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call
   93 instruction: KW_IF . expression KW_THEN statement
   94            | KW_IF . expression KW_THEN statement KW_ELSE statement

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 101


State 56

   95 instruction: KW_FOR . IDENT array_call ASSIGN expression KW_TO expression KW_DO statement
   96            | KW_FOR . IDENT array_call ASSIGN expression KW_DOWNTO expression KW_DO statement

    IDENT  shift, and go to state 102


State 57

    4 body: . KW_BEGIN statements KW_END
    9 statement: . proc_call
   10          | . instruction
   11 proc_call: . IDENT '(' arguments ')'
   90 instruction: . body
   91            | . IDENT array_call ASSIGN expression
   92            | . KW_RESULT ASSIGN expression
   93            | . KW_IF expression KW_THEN statement
   94            | . KW_IF expression KW_THEN statement KW_ELSE statement
   95            | . KW_FOR IDENT array_call ASSIGN expression KW_TO expression KW_DO statement
   96            | . KW_FOR IDENT array_call ASSIGN expression KW_DOWNTO expression KW_DO statement
   97            | . KW_WHILE expression KW_DO statement
   98            | . KW_REPEAT statement KW_UNTIL expression
   98            | KW_REPEAT . statement KW_UNTIL expression
   99            | . IDENT ':' statement
  100            | . KW_GOTO IDENT
  101            | . KW_RETURN
  102            | . IDENT array_call ASSIGN LIB_RS '(' ')'
  103            | . IDENT array_call ASSIGN LIB_RI '(' ')'
  104            | . IDENT array_call ASSIGN LIB_RR '(' ')'
  105            | . KW_RESULT ASSIGN LIB_RS '(' ')'
  106            | . KW_RESULT ASSIGN LIB_RI '(' ')'
  107            | . KW_RESULT ASSIGN LIB_RR '(' ')'

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 51
    KW_RESULT  shift, and go to state 52
    KW_GOTO    shift, and go to state 53
    KW_RETURN  shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    body         go to state 59
    statement    go to state 103
    proc_call    go to state 63
    instruction  go to state 64


State 58

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call
   97 instruction: KW_WHILE . expression KW_DO statement

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 104


State 59

   90 instruction: body .

    $default  reduce using rule 90 (instruction)


State 60

    3 main_body: KW_BEGIN statements . KW_END

    KW_END  shift, and go to state 105


State 61

    6 statements: statement_list .  [KW_END]
    8 statement_list: statement_list . ';' statement

    ';'  shift, and go to state 106

    $default  reduce using rule 6 (statements)


State 62

    7 statement_list: statement .

    $default  reduce using rule 7 (statement_list)


State 63

    9 statement: proc_call .

    $default  reduce using rule 9 (statement)


State 64

   10 statement: instruction .

    $default  reduce using rule 10 (statement)


State 65

   75 subroutine_decl: KW_FUNCTION IDENT . '(' sub_arg_decl_list ')' ':' data_type ';'
   76                | KW_FUNCTION IDENT . '(' ')' ':' data_type ';'

    '('  shift, and go to state 107


State 66

   73 subroutine_decl: KW_PROCEDURE IDENT . '(' sub_arg_decl_list ')' ';'
   74                | KW_PROCEDURE IDENT . '(' ')' ';'

    '('  shift, and go to state 108


State 67

    1 program: program_decl type_declaration var_declaration subroutine_decl_list main_body '.' .

    $default  reduce using rule 1 (program)


State 68

   62 var_declaration: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   63                | . KW_VAR var_decl_list ';'
   72 subroutine: subroutine_decl type_declaration . var_declaration subroutine_decl_list subroutine_body ';'

    KW_VAR  shift, and go to state 12

    $default  reduce using rule 62 (var_declaration)

    var_declaration  go to state 109


State 69

   61 type_decl: IDENT '=' KW_FUNCTION '(' ')' . ':' data_type ';'

    ':'  shift, and go to state 110


State 70

   60 type_decl: IDENT '=' KW_FUNCTION '(' sub_arg_decl_list . ')' ':' data_type ';'
   78 sub_arg_decl_list: sub_arg_decl_list . ';' sub_arg_decl

    ';'  shift, and go to state 111
    ')'  shift, and go to state 112


State 71

   77 sub_arg_decl_list: sub_arg_decl .

    $default  reduce using rule 77 (sub_arg_decl_list)


State 72

   79 sub_arg_decl: var_ident . ':' data_type
   80             | var_ident . ':' KW_ARRAY array_size KW_OF basic_data_type
   81             | var_ident . ':' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type
   82             | var_ident . ':' KW_FUNCTION '(' ')' ':' data_type

    ':'  shift, and go to state 113


State 73

   53 array_of_type: KW_ARRAY KW_OF basic_data_type .

    $default  reduce using rule 53 (array_of_type)


State 74

   11 proc_call: IDENT . '(' arguments ')'
   18 expression: IDENT . array_call
   86 array_call: . %empty  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   87           | . array_size
   88 array_size: . '[' expression ']'
   89           | . '[' expression ']' array_size

    '('  shift, and go to state 94
    '['  shift, and go to state 42

    $default  reduce using rule 86 (array_call)

    array_call  go to state 114
    array_size  go to state 97


State 75

   16 expression: POSINT .

    $default  reduce using rule 16 (expression)


State 76

   17 expression: REAL .

    $default  reduce using rule 17 (expression)


State 77

   22 expression: STRING .

    $default  reduce using rule 22 (expression)


State 78

   19 expression: KW_RESULT .

    $default  reduce using rule 19 (expression)


State 79

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   34           | KW_NOT . expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 115


State 80

   20 expression: KW_TRUE .

    $default  reduce using rule 20 (expression)


State 81

   21 expression: KW_FALSE .

    $default  reduce using rule 21 (expression)


State 82

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   24           | CAST_INTEGER . expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 116


State 83

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   25           | CAST_BOOLEAN . expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 117


State 84

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   26           | CAST_CHAR . expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 118


State 85

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   27           | CAST_REAL . expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 119


State 86

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   35           | '-' . expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 120


State 87

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   36           | '+' . expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 121


State 88

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   23           | '(' . expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 122


State 89

   45 expression: proc_call .

    $default  reduce using rule 45 (expression)


State 90

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression
   88 array_size: '[' expression . ']'
   89           | '[' expression . ']' array_size

    KW_AND        shift, and go to state 123
    KW_DIV        shift, and go to state 124
    KW_MOD        shift, and go to state 125
    KW_OR         shift, and go to state 126
    OP_INEQUAL    shift, and go to state 127
    OP_LESSEQ     shift, and go to state 128
    OP_GREATEREQ  shift, and go to state 129
    '='           shift, and go to state 130
    '<'           shift, and go to state 131
    '>'           shift, and go to state 132
    '-'           shift, and go to state 133
    '+'           shift, and go to state 134
    '*'           shift, and go to state 135
    '/'           shift, and go to state 136
    ']'           shift, and go to state 137


State 91

   48 basic_data_type: . KW_INTEGER
   49                | . KW_BOOLEAN
   50                | . KW_CHAR
   51                | . KW_REAL
   52                | . IDENT
   59 type_decl: IDENT '=' KW_ARRAY array_size KW_OF . basic_data_type ';'

    IDENT       shift, and go to state 21
    KW_BOOLEAN  shift, and go to state 24
    KW_REAL     shift, and go to state 25
    KW_CHAR     shift, and go to state 26
    KW_INTEGER  shift, and go to state 27

    basic_data_type  go to state 138


State 92

   68 var_decl: var_ident ':' KW_FUNCTION '(' . sub_arg_decl_list ')' ':' data_type
   69         | var_ident ':' KW_FUNCTION '(' . ')' ':' data_type
   77 sub_arg_decl_list: . sub_arg_decl
   78                  | . sub_arg_decl_list ';' sub_arg_decl
   79 sub_arg_decl: . var_ident ':' data_type
   80             | . var_ident ':' KW_ARRAY array_size KW_OF basic_data_type
   81             | . var_ident ':' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type
   82             | . var_ident ':' KW_FUNCTION '(' ')' ':' data_type
   84 var_ident: . IDENT
   85          | . IDENT ',' var_ident

    IDENT  shift, and go to state 16
    ')'    shift, and go to state 139

    sub_arg_decl_list  go to state 140
    sub_arg_decl       go to state 71
    var_ident          go to state 72


State 93

   67 var_decl: var_ident ':' KW_ARRAY array_size . KW_OF basic_data_type

    KW_OF  shift, and go to state 141


State 94

   11 proc_call: . IDENT '(' arguments ')'
   11          | IDENT '(' . arguments ')'
   12 arguments: . %empty  [')']
   13          | . arglist
   14 arglist: . expression
   15        | . arglist ',' expression
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    $default  reduce using rule 12 (arguments)

    proc_call   go to state 89
    arguments   go to state 142
    arglist     go to state 143
    expression  go to state 144


State 95

    4 body: . KW_BEGIN statements KW_END
    9 statement: . proc_call
   10          | . instruction
   11 proc_call: . IDENT '(' arguments ')'
   90 instruction: . body
   91            | . IDENT array_call ASSIGN expression
   92            | . KW_RESULT ASSIGN expression
   93            | . KW_IF expression KW_THEN statement
   94            | . KW_IF expression KW_THEN statement KW_ELSE statement
   95            | . KW_FOR IDENT array_call ASSIGN expression KW_TO expression KW_DO statement
   96            | . KW_FOR IDENT array_call ASSIGN expression KW_DOWNTO expression KW_DO statement
   97            | . KW_WHILE expression KW_DO statement
   98            | . KW_REPEAT statement KW_UNTIL expression
   99            | . IDENT ':' statement
   99            | IDENT ':' . statement
  100            | . KW_GOTO IDENT
  101            | . KW_RETURN
  102            | . IDENT array_call ASSIGN LIB_RS '(' ')'
  103            | . IDENT array_call ASSIGN LIB_RI '(' ')'
  104            | . IDENT array_call ASSIGN LIB_RR '(' ')'
  105            | . KW_RESULT ASSIGN LIB_RS '(' ')'
  106            | . KW_RESULT ASSIGN LIB_RI '(' ')'
  107            | . KW_RESULT ASSIGN LIB_RR '(' ')'

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 51
    KW_RESULT  shift, and go to state 52
    KW_GOTO    shift, and go to state 53
    KW_RETURN  shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    body         go to state 59
    statement    go to state 145
    proc_call    go to state 63
    instruction  go to state 64


State 96

   91 instruction: IDENT array_call . ASSIGN expression
  102            | IDENT array_call . ASSIGN LIB_RS '(' ')'
  103            | IDENT array_call . ASSIGN LIB_RI '(' ')'
  104            | IDENT array_call . ASSIGN LIB_RR '(' ')'

    ASSIGN  shift, and go to state 146


State 97

   87 array_call: array_size .

    $default  reduce using rule 87 (array_call)


State 98

    4 body: KW_BEGIN statements . KW_END

    KW_END  shift, and go to state 147


State 99

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call
   92 instruction: KW_RESULT ASSIGN . expression
  105            | KW_RESULT ASSIGN . LIB_RS '(' ')'
  106            | KW_RESULT ASSIGN . LIB_RI '(' ')'
  107            | KW_RESULT ASSIGN . LIB_RR '(' ')'

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    LIB_RS        shift, and go to state 148
    LIB_RI        shift, and go to state 149
    LIB_RR        shift, and go to state 150
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 151


State 100

  100 instruction: KW_GOTO IDENT .

    $default  reduce using rule 100 (instruction)


State 101

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression
   93 instruction: KW_IF expression . KW_THEN statement
   94            | KW_IF expression . KW_THEN statement KW_ELSE statement

    KW_AND        shift, and go to state 123
    KW_DIV        shift, and go to state 124
    KW_MOD        shift, and go to state 125
    KW_THEN       shift, and go to state 152
    KW_OR         shift, and go to state 126
    OP_INEQUAL    shift, and go to state 127
    OP_LESSEQ     shift, and go to state 128
    OP_GREATEREQ  shift, and go to state 129
    '='           shift, and go to state 130
    '<'           shift, and go to state 131
    '>'           shift, and go to state 132
    '-'           shift, and go to state 133
    '+'           shift, and go to state 134
    '*'           shift, and go to state 135
    '/'           shift, and go to state 136


State 102

   86 array_call: . %empty  [ASSIGN]
   87           | . array_size
   88 array_size: . '[' expression ']'
   89           | . '[' expression ']' array_size
   95 instruction: KW_FOR IDENT . array_call ASSIGN expression KW_TO expression KW_DO statement
   96            | KW_FOR IDENT . array_call ASSIGN expression KW_DOWNTO expression KW_DO statement

    '['  shift, and go to state 42

    $default  reduce using rule 86 (array_call)

    array_call  go to state 153
    array_size  go to state 97


State 103

   98 instruction: KW_REPEAT statement . KW_UNTIL expression

    KW_UNTIL  shift, and go to state 154


State 104

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression
   97 instruction: KW_WHILE expression . KW_DO statement

    KW_AND        shift, and go to state 123
    KW_DIV        shift, and go to state 124
    KW_MOD        shift, and go to state 125
    KW_DO         shift, and go to state 155
    KW_OR         shift, and go to state 126
    OP_INEQUAL    shift, and go to state 127
    OP_LESSEQ     shift, and go to state 128
    OP_GREATEREQ  shift, and go to state 129
    '='           shift, and go to state 130
    '<'           shift, and go to state 131
    '>'           shift, and go to state 132
    '-'           shift, and go to state 133
    '+'           shift, and go to state 134
    '*'           shift, and go to state 135
    '/'           shift, and go to state 136


State 105

    3 main_body: KW_BEGIN statements KW_END .

    $default  reduce using rule 3 (main_body)


State 106

    4 body: . KW_BEGIN statements KW_END
    8 statement_list: statement_list ';' . statement
    9 statement: . proc_call
   10          | . instruction
   11 proc_call: . IDENT '(' arguments ')'
   90 instruction: . body
   91            | . IDENT array_call ASSIGN expression
   92            | . KW_RESULT ASSIGN expression
   93            | . KW_IF expression KW_THEN statement
   94            | . KW_IF expression KW_THEN statement KW_ELSE statement
   95            | . KW_FOR IDENT array_call ASSIGN expression KW_TO expression KW_DO statement
   96            | . KW_FOR IDENT array_call ASSIGN expression KW_DOWNTO expression KW_DO statement
   97            | . KW_WHILE expression KW_DO statement
   98            | . KW_REPEAT statement KW_UNTIL expression
   99            | . IDENT ':' statement
  100            | . KW_GOTO IDENT
  101            | . KW_RETURN
  102            | . IDENT array_call ASSIGN LIB_RS '(' ')'
  103            | . IDENT array_call ASSIGN LIB_RI '(' ')'
  104            | . IDENT array_call ASSIGN LIB_RR '(' ')'
  105            | . KW_RESULT ASSIGN LIB_RS '(' ')'
  106            | . KW_RESULT ASSIGN LIB_RI '(' ')'
  107            | . KW_RESULT ASSIGN LIB_RR '(' ')'

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 51
    KW_RESULT  shift, and go to state 52
    KW_GOTO    shift, and go to state 53
    KW_RETURN  shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    body         go to state 59
    statement    go to state 156
    proc_call    go to state 63
    instruction  go to state 64


State 107

   75 subroutine_decl: KW_FUNCTION IDENT '(' . sub_arg_decl_list ')' ':' data_type ';'
   76                | KW_FUNCTION IDENT '(' . ')' ':' data_type ';'
   77 sub_arg_decl_list: . sub_arg_decl
   78                  | . sub_arg_decl_list ';' sub_arg_decl
   79 sub_arg_decl: . var_ident ':' data_type
   80             | . var_ident ':' KW_ARRAY array_size KW_OF basic_data_type
   81             | . var_ident ':' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type
   82             | . var_ident ':' KW_FUNCTION '(' ')' ':' data_type
   84 var_ident: . IDENT
   85          | . IDENT ',' var_ident

    IDENT  shift, and go to state 16
    ')'    shift, and go to state 157

    sub_arg_decl_list  go to state 158
    sub_arg_decl       go to state 71
    var_ident          go to state 72


State 108

   73 subroutine_decl: KW_PROCEDURE IDENT '(' . sub_arg_decl_list ')' ';'
   74                | KW_PROCEDURE IDENT '(' . ')' ';'
   77 sub_arg_decl_list: . sub_arg_decl
   78                  | . sub_arg_decl_list ';' sub_arg_decl
   79 sub_arg_decl: . var_ident ':' data_type
   80             | . var_ident ':' KW_ARRAY array_size KW_OF basic_data_type
   81             | . var_ident ':' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type
   82             | . var_ident ':' KW_FUNCTION '(' ')' ':' data_type
   84 var_ident: . IDENT
   85          | . IDENT ',' var_ident

    IDENT  shift, and go to state 16
    ')'    shift, and go to state 159

    sub_arg_decl_list  go to state 160
    sub_arg_decl       go to state 71
    var_ident          go to state 72


State 109

   70 subroutine_decl_list: . %empty
   71                     | . subroutine_decl_list subroutine
   72 subroutine: subroutine_decl type_declaration var_declaration . subroutine_decl_list subroutine_body ';'

    $default  reduce using rule 70 (subroutine_decl_list)

    subroutine_decl_list  go to state 161


State 110

   46 data_type: . basic_data_type
   47          | . array_of_type
   48 basic_data_type: . KW_INTEGER
   49                | . KW_BOOLEAN
   50                | . KW_CHAR
   51                | . KW_REAL
   52                | . IDENT
   53 array_of_type: . KW_ARRAY KW_OF basic_data_type
   61 type_decl: IDENT '=' KW_FUNCTION '(' ')' ':' . data_type ';'

    IDENT       shift, and go to state 21
    KW_ARRAY    shift, and go to state 162
    KW_BOOLEAN  shift, and go to state 24
    KW_REAL     shift, and go to state 25
    KW_CHAR     shift, and go to state 26
    KW_INTEGER  shift, and go to state 27

    data_type        go to state 163
    basic_data_type  go to state 29
    array_of_type    go to state 30


State 111

   78 sub_arg_decl_list: sub_arg_decl_list ';' . sub_arg_decl
   79 sub_arg_decl: . var_ident ':' data_type
   80             | . var_ident ':' KW_ARRAY array_size KW_OF basic_data_type
   81             | . var_ident ':' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type
   82             | . var_ident ':' KW_FUNCTION '(' ')' ':' data_type
   84 var_ident: . IDENT
   85          | . IDENT ',' var_ident

    IDENT  shift, and go to state 16

    sub_arg_decl  go to state 164
    var_ident     go to state 72


State 112

   60 type_decl: IDENT '=' KW_FUNCTION '(' sub_arg_decl_list ')' . ':' data_type ';'

    ':'  shift, and go to state 165


State 113

   46 data_type: . basic_data_type
   47          | . array_of_type
   48 basic_data_type: . KW_INTEGER
   49                | . KW_BOOLEAN
   50                | . KW_CHAR
   51                | . KW_REAL
   52                | . IDENT
   53 array_of_type: . KW_ARRAY KW_OF basic_data_type
   79 sub_arg_decl: var_ident ':' . data_type
   80             | var_ident ':' . KW_ARRAY array_size KW_OF basic_data_type
   81             | var_ident ':' . KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type
   82             | var_ident ':' . KW_FUNCTION '(' ')' ':' data_type

    IDENT        shift, and go to state 21
    KW_FUNCTION  shift, and go to state 166
    KW_ARRAY     shift, and go to state 167
    KW_BOOLEAN   shift, and go to state 24
    KW_REAL      shift, and go to state 25
    KW_CHAR      shift, and go to state 26
    KW_INTEGER   shift, and go to state 27

    data_type        go to state 168
    basic_data_type  go to state 29
    array_of_type    go to state 30


State 114

   18 expression: IDENT array_call .

    $default  reduce using rule 18 (expression)


State 115

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   34           | KW_NOT expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    $default  reduce using rule 34 (expression)

    Conflict between rule 34 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 34 and token KW_DIV resolved as reduce (KW_DIV < KW_NOT).
    Conflict between rule 34 and token KW_MOD resolved as reduce (KW_MOD < KW_NOT).
    Conflict between rule 34 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 34 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < KW_NOT).
    Conflict between rule 34 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < KW_NOT).
    Conflict between rule 34 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < KW_NOT).
    Conflict between rule 34 and token '=' resolved as reduce ('=' < KW_NOT).
    Conflict between rule 34 and token '<' resolved as reduce ('<' < KW_NOT).
    Conflict between rule 34 and token '>' resolved as reduce ('>' < KW_NOT).
    Conflict between rule 34 and token '-' resolved as reduce ('-' < KW_NOT).
    Conflict between rule 34 and token '+' resolved as reduce ('+' < KW_NOT).
    Conflict between rule 34 and token '*' resolved as reduce ('*' < KW_NOT).
    Conflict between rule 34 and token '/' resolved as reduce ('/' < KW_NOT).


State 116

   24 expression: CAST_INTEGER expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   28           | expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    $default  reduce using rule 24 (expression)

    Conflict between rule 24 and token KW_AND resolved as reduce (KW_AND < CAST_INTEGER).
    Conflict between rule 24 and token KW_DIV resolved as reduce (KW_DIV < CAST_INTEGER).
    Conflict between rule 24 and token KW_MOD resolved as reduce (KW_MOD < CAST_INTEGER).
    Conflict between rule 24 and token KW_OR resolved as reduce (KW_OR < CAST_INTEGER).
    Conflict between rule 24 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < CAST_INTEGER).
    Conflict between rule 24 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < CAST_INTEGER).
    Conflict between rule 24 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < CAST_INTEGER).
    Conflict between rule 24 and token '=' resolved as reduce ('=' < CAST_INTEGER).
    Conflict between rule 24 and token '<' resolved as reduce ('<' < CAST_INTEGER).
    Conflict between rule 24 and token '>' resolved as reduce ('>' < CAST_INTEGER).
    Conflict between rule 24 and token '-' resolved as reduce ('-' < CAST_INTEGER).
    Conflict between rule 24 and token '+' resolved as reduce ('+' < CAST_INTEGER).
    Conflict between rule 24 and token '*' resolved as reduce ('*' < CAST_INTEGER).
    Conflict between rule 24 and token '/' resolved as reduce ('/' < CAST_INTEGER).


State 117

   25 expression: CAST_BOOLEAN expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   28           | expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    $default  reduce using rule 25 (expression)

    Conflict between rule 25 and token KW_AND resolved as reduce (KW_AND < CAST_BOOLEAN).
    Conflict between rule 25 and token KW_DIV resolved as reduce (KW_DIV < CAST_BOOLEAN).
    Conflict between rule 25 and token KW_MOD resolved as reduce (KW_MOD < CAST_BOOLEAN).
    Conflict between rule 25 and token KW_OR resolved as reduce (KW_OR < CAST_BOOLEAN).
    Conflict between rule 25 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < CAST_BOOLEAN).
    Conflict between rule 25 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < CAST_BOOLEAN).
    Conflict between rule 25 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < CAST_BOOLEAN).
    Conflict between rule 25 and token '=' resolved as reduce ('=' < CAST_BOOLEAN).
    Conflict between rule 25 and token '<' resolved as reduce ('<' < CAST_BOOLEAN).
    Conflict between rule 25 and token '>' resolved as reduce ('>' < CAST_BOOLEAN).
    Conflict between rule 25 and token '-' resolved as reduce ('-' < CAST_BOOLEAN).
    Conflict between rule 25 and token '+' resolved as reduce ('+' < CAST_BOOLEAN).
    Conflict between rule 25 and token '*' resolved as reduce ('*' < CAST_BOOLEAN).
    Conflict between rule 25 and token '/' resolved as reduce ('/' < CAST_BOOLEAN).


State 118

   26 expression: CAST_CHAR expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   28           | expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    $default  reduce using rule 26 (expression)

    Conflict between rule 26 and token KW_AND resolved as reduce (KW_AND < CAST_CHAR).
    Conflict between rule 26 and token KW_DIV resolved as reduce (KW_DIV < CAST_CHAR).
    Conflict between rule 26 and token KW_MOD resolved as reduce (KW_MOD < CAST_CHAR).
    Conflict between rule 26 and token KW_OR resolved as reduce (KW_OR < CAST_CHAR).
    Conflict between rule 26 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < CAST_CHAR).
    Conflict between rule 26 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < CAST_CHAR).
    Conflict between rule 26 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < CAST_CHAR).
    Conflict between rule 26 and token '=' resolved as reduce ('=' < CAST_CHAR).
    Conflict between rule 26 and token '<' resolved as reduce ('<' < CAST_CHAR).
    Conflict between rule 26 and token '>' resolved as reduce ('>' < CAST_CHAR).
    Conflict between rule 26 and token '-' resolved as reduce ('-' < CAST_CHAR).
    Conflict between rule 26 and token '+' resolved as reduce ('+' < CAST_CHAR).
    Conflict between rule 26 and token '*' resolved as reduce ('*' < CAST_CHAR).
    Conflict between rule 26 and token '/' resolved as reduce ('/' < CAST_CHAR).


State 119

   27 expression: CAST_REAL expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   28           | expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    $default  reduce using rule 27 (expression)

    Conflict between rule 27 and token KW_AND resolved as reduce (KW_AND < CAST_REAL).
    Conflict between rule 27 and token KW_DIV resolved as reduce (KW_DIV < CAST_REAL).
    Conflict between rule 27 and token KW_MOD resolved as reduce (KW_MOD < CAST_REAL).
    Conflict between rule 27 and token KW_OR resolved as reduce (KW_OR < CAST_REAL).
    Conflict between rule 27 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < CAST_REAL).
    Conflict between rule 27 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < CAST_REAL).
    Conflict between rule 27 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < CAST_REAL).
    Conflict between rule 27 and token '=' resolved as reduce ('=' < CAST_REAL).
    Conflict between rule 27 and token '<' resolved as reduce ('<' < CAST_REAL).
    Conflict between rule 27 and token '>' resolved as reduce ('>' < CAST_REAL).
    Conflict between rule 27 and token '-' resolved as reduce ('-' < CAST_REAL).
    Conflict between rule 27 and token '+' resolved as reduce ('+' < CAST_REAL).
    Conflict between rule 27 and token '*' resolved as reduce ('*' < CAST_REAL).
    Conflict between rule 27 and token '/' resolved as reduce ('/' < CAST_REAL).


State 120

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   35           | '-' expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    $default  reduce using rule 35 (expression)

    Conflict between rule 35 and token KW_AND resolved as reduce (KW_AND < UMINUS).
    Conflict between rule 35 and token KW_DIV resolved as reduce (KW_DIV < UMINUS).
    Conflict between rule 35 and token KW_MOD resolved as reduce (KW_MOD < UMINUS).
    Conflict between rule 35 and token KW_OR resolved as reduce (KW_OR < UMINUS).
    Conflict between rule 35 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < UMINUS).
    Conflict between rule 35 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < UMINUS).
    Conflict between rule 35 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < UMINUS).
    Conflict between rule 35 and token '=' resolved as reduce ('=' < UMINUS).
    Conflict between rule 35 and token '<' resolved as reduce ('<' < UMINUS).
    Conflict between rule 35 and token '>' resolved as reduce ('>' < UMINUS).
    Conflict between rule 35 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 35 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 35 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 35 and token '/' resolved as reduce ('/' < UMINUS).


State 121

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   36           | '+' expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    $default  reduce using rule 36 (expression)

    Conflict between rule 36 and token KW_AND resolved as reduce (KW_AND < UPLUS).
    Conflict between rule 36 and token KW_DIV resolved as reduce (KW_DIV < UPLUS).
    Conflict between rule 36 and token KW_MOD resolved as reduce (KW_MOD < UPLUS).
    Conflict between rule 36 and token KW_OR resolved as reduce (KW_OR < UPLUS).
    Conflict between rule 36 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < UPLUS).
    Conflict between rule 36 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < UPLUS).
    Conflict between rule 36 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < UPLUS).
    Conflict between rule 36 and token '=' resolved as reduce ('=' < UPLUS).
    Conflict between rule 36 and token '<' resolved as reduce ('<' < UPLUS).
    Conflict between rule 36 and token '>' resolved as reduce ('>' < UPLUS).
    Conflict between rule 36 and token '-' resolved as reduce ('-' < UPLUS).
    Conflict between rule 36 and token '+' resolved as reduce ('+' < UPLUS).
    Conflict between rule 36 and token '*' resolved as reduce ('*' < UPLUS).
    Conflict between rule 36 and token '/' resolved as reduce ('/' < UPLUS).


State 122

   23 expression: '(' expression . ')'
   28           | expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    KW_AND        shift, and go to state 123
    KW_DIV        shift, and go to state 124
    KW_MOD        shift, and go to state 125
    KW_OR         shift, and go to state 126
    OP_INEQUAL    shift, and go to state 127
    OP_LESSEQ     shift, and go to state 128
    OP_GREATEREQ  shift, and go to state 129
    '='           shift, and go to state 130
    '<'           shift, and go to state 131
    '>'           shift, and go to state 132
    '-'           shift, and go to state 133
    '+'           shift, and go to state 134
    '*'           shift, and go to state 135
    '/'           shift, and go to state 136
    ')'           shift, and go to state 169


State 123

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   43           | expression KW_AND . expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 170


State 124

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   32           | expression KW_DIV . expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 171


State 125

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   33           | expression KW_MOD . expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 172


State 126

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   44           | expression KW_OR . expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 173


State 127

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   38           | expression OP_INEQUAL . expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 174


State 128

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   41           | expression OP_LESSEQ . expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 175


State 129

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   42           | expression OP_GREATEREQ . expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 176


State 130

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   37           | expression '=' . expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 177


State 131

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   39           | expression '<' . expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 178


State 132

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   40           | expression '>' . expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 179


State 133

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   29           | expression '-' . expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 180


State 134

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   28           | expression '+' . expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 181


State 135

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   30           | expression '*' . expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 182


State 136

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   31           | expression '/' . expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 183


State 137

   88 array_size: . '[' expression ']'
   88           | '[' expression ']' .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_OF, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, ASSIGN, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   89           | . '[' expression ']' array_size
   89           | '[' expression ']' . array_size

    '['  shift, and go to state 42

    $default  reduce using rule 88 (array_size)

    array_size  go to state 184


State 138

   59 type_decl: IDENT '=' KW_ARRAY array_size KW_OF basic_data_type . ';'

    ';'  shift, and go to state 185


State 139

   69 var_decl: var_ident ':' KW_FUNCTION '(' ')' . ':' data_type

    ':'  shift, and go to state 186


State 140

   68 var_decl: var_ident ':' KW_FUNCTION '(' sub_arg_decl_list . ')' ':' data_type
   78 sub_arg_decl_list: sub_arg_decl_list . ';' sub_arg_decl

    ';'  shift, and go to state 111
    ')'  shift, and go to state 187


State 141

   48 basic_data_type: . KW_INTEGER
   49                | . KW_BOOLEAN
   50                | . KW_CHAR
   51                | . KW_REAL
   52                | . IDENT
   67 var_decl: var_ident ':' KW_ARRAY array_size KW_OF . basic_data_type

    IDENT       shift, and go to state 21
    KW_BOOLEAN  shift, and go to state 24
    KW_REAL     shift, and go to state 25
    KW_CHAR     shift, and go to state 26
    KW_INTEGER  shift, and go to state 27

    basic_data_type  go to state 188


State 142

   11 proc_call: IDENT '(' arguments . ')'

    ')'  shift, and go to state 189


State 143

   13 arguments: arglist .  [')']
   15 arglist: arglist . ',' expression

    ','  shift, and go to state 190

    $default  reduce using rule 13 (arguments)


State 144

   14 arglist: expression .  [')', ',']
   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    KW_AND        shift, and go to state 123
    KW_DIV        shift, and go to state 124
    KW_MOD        shift, and go to state 125
    KW_OR         shift, and go to state 126
    OP_INEQUAL    shift, and go to state 127
    OP_LESSEQ     shift, and go to state 128
    OP_GREATEREQ  shift, and go to state 129
    '='           shift, and go to state 130
    '<'           shift, and go to state 131
    '>'           shift, and go to state 132
    '-'           shift, and go to state 133
    '+'           shift, and go to state 134
    '*'           shift, and go to state 135
    '/'           shift, and go to state 136

    $default  reduce using rule 14 (arglist)


State 145

   99 instruction: IDENT ':' statement .

    $default  reduce using rule 99 (instruction)


State 146

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call
   91 instruction: IDENT array_call ASSIGN . expression
  102            | IDENT array_call ASSIGN . LIB_RS '(' ')'
  103            | IDENT array_call ASSIGN . LIB_RI '(' ')'
  104            | IDENT array_call ASSIGN . LIB_RR '(' ')'

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    LIB_RS        shift, and go to state 191
    LIB_RI        shift, and go to state 192
    LIB_RR        shift, and go to state 193
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 194


State 147

    4 body: KW_BEGIN statements KW_END .

    $default  reduce using rule 4 (body)


State 148

  105 instruction: KW_RESULT ASSIGN LIB_RS . '(' ')'

    '('  shift, and go to state 195


State 149

  106 instruction: KW_RESULT ASSIGN LIB_RI . '(' ')'

    '('  shift, and go to state 196


State 150

  107 instruction: KW_RESULT ASSIGN LIB_RR . '(' ')'

    '('  shift, and go to state 197


State 151

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression
   92 instruction: KW_RESULT ASSIGN expression .  [KW_END, KW_ELSE, KW_UNTIL, ';']

    KW_AND        shift, and go to state 123
    KW_DIV        shift, and go to state 124
    KW_MOD        shift, and go to state 125
    KW_OR         shift, and go to state 126
    OP_INEQUAL    shift, and go to state 127
    OP_LESSEQ     shift, and go to state 128
    OP_GREATEREQ  shift, and go to state 129
    '='           shift, and go to state 130
    '<'           shift, and go to state 131
    '>'           shift, and go to state 132
    '-'           shift, and go to state 133
    '+'           shift, and go to state 134
    '*'           shift, and go to state 135
    '/'           shift, and go to state 136

    $default  reduce using rule 92 (instruction)


State 152

    4 body: . KW_BEGIN statements KW_END
    9 statement: . proc_call
   10          | . instruction
   11 proc_call: . IDENT '(' arguments ')'
   90 instruction: . body
   91            | . IDENT array_call ASSIGN expression
   92            | . KW_RESULT ASSIGN expression
   93            | . KW_IF expression KW_THEN statement
   93            | KW_IF expression KW_THEN . statement
   94            | . KW_IF expression KW_THEN statement KW_ELSE statement
   94            | KW_IF expression KW_THEN . statement KW_ELSE statement
   95            | . KW_FOR IDENT array_call ASSIGN expression KW_TO expression KW_DO statement
   96            | . KW_FOR IDENT array_call ASSIGN expression KW_DOWNTO expression KW_DO statement
   97            | . KW_WHILE expression KW_DO statement
   98            | . KW_REPEAT statement KW_UNTIL expression
   99            | . IDENT ':' statement
  100            | . KW_GOTO IDENT
  101            | . KW_RETURN
  102            | . IDENT array_call ASSIGN LIB_RS '(' ')'
  103            | . IDENT array_call ASSIGN LIB_RI '(' ')'
  104            | . IDENT array_call ASSIGN LIB_RR '(' ')'
  105            | . KW_RESULT ASSIGN LIB_RS '(' ')'
  106            | . KW_RESULT ASSIGN LIB_RI '(' ')'
  107            | . KW_RESULT ASSIGN LIB_RR '(' ')'

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 51
    KW_RESULT  shift, and go to state 52
    KW_GOTO    shift, and go to state 53
    KW_RETURN  shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    body         go to state 59
    statement    go to state 198
    proc_call    go to state 63
    instruction  go to state 64


State 153

   95 instruction: KW_FOR IDENT array_call . ASSIGN expression KW_TO expression KW_DO statement
   96            | KW_FOR IDENT array_call . ASSIGN expression KW_DOWNTO expression KW_DO statement

    ASSIGN  shift, and go to state 199


State 154

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call
   98 instruction: KW_REPEAT statement KW_UNTIL . expression

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 200


State 155

    4 body: . KW_BEGIN statements KW_END
    9 statement: . proc_call
   10          | . instruction
   11 proc_call: . IDENT '(' arguments ')'
   90 instruction: . body
   91            | . IDENT array_call ASSIGN expression
   92            | . KW_RESULT ASSIGN expression
   93            | . KW_IF expression KW_THEN statement
   94            | . KW_IF expression KW_THEN statement KW_ELSE statement
   95            | . KW_FOR IDENT array_call ASSIGN expression KW_TO expression KW_DO statement
   96            | . KW_FOR IDENT array_call ASSIGN expression KW_DOWNTO expression KW_DO statement
   97            | . KW_WHILE expression KW_DO statement
   97            | KW_WHILE expression KW_DO . statement
   98            | . KW_REPEAT statement KW_UNTIL expression
   99            | . IDENT ':' statement
  100            | . KW_GOTO IDENT
  101            | . KW_RETURN
  102            | . IDENT array_call ASSIGN LIB_RS '(' ')'
  103            | . IDENT array_call ASSIGN LIB_RI '(' ')'
  104            | . IDENT array_call ASSIGN LIB_RR '(' ')'
  105            | . KW_RESULT ASSIGN LIB_RS '(' ')'
  106            | . KW_RESULT ASSIGN LIB_RI '(' ')'
  107            | . KW_RESULT ASSIGN LIB_RR '(' ')'

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 51
    KW_RESULT  shift, and go to state 52
    KW_GOTO    shift, and go to state 53
    KW_RETURN  shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    body         go to state 59
    statement    go to state 201
    proc_call    go to state 63
    instruction  go to state 64


State 156

    8 statement_list: statement_list ';' statement .

    $default  reduce using rule 8 (statement_list)


State 157

   76 subroutine_decl: KW_FUNCTION IDENT '(' ')' . ':' data_type ';'

    ':'  shift, and go to state 202


State 158

   75 subroutine_decl: KW_FUNCTION IDENT '(' sub_arg_decl_list . ')' ':' data_type ';'
   78 sub_arg_decl_list: sub_arg_decl_list . ';' sub_arg_decl

    ';'  shift, and go to state 111
    ')'  shift, and go to state 203


State 159

   74 subroutine_decl: KW_PROCEDURE IDENT '(' ')' . ';'

    ';'  shift, and go to state 204


State 160

   73 subroutine_decl: KW_PROCEDURE IDENT '(' sub_arg_decl_list . ')' ';'
   78 sub_arg_decl_list: sub_arg_decl_list . ';' sub_arg_decl

    ';'  shift, and go to state 111
    ')'  shift, and go to state 205


State 161

   71 subroutine_decl_list: subroutine_decl_list . subroutine
   72 subroutine: . subroutine_decl type_declaration var_declaration subroutine_decl_list subroutine_body ';'
   72           | subroutine_decl type_declaration var_declaration subroutine_decl_list . subroutine_body ';'
   73 subroutine_decl: . KW_PROCEDURE IDENT '(' sub_arg_decl_list ')' ';'
   74                | . KW_PROCEDURE IDENT '(' ')' ';'
   75                | . KW_FUNCTION IDENT '(' sub_arg_decl_list ')' ':' data_type ';'
   76                | . KW_FUNCTION IDENT '(' ')' ':' data_type ';'
   83 subroutine_body: . KW_BEGIN statements KW_END

    KW_BEGIN      shift, and go to state 206
    KW_FUNCTION   shift, and go to state 35
    KW_PROCEDURE  shift, and go to state 36

    subroutine       go to state 38
    subroutine_decl  go to state 39
    subroutine_body  go to state 207


State 162

   53 array_of_type: KW_ARRAY . KW_OF basic_data_type

    KW_OF  shift, and go to state 41


State 163

   61 type_decl: IDENT '=' KW_FUNCTION '(' ')' ':' data_type . ';'

    ';'  shift, and go to state 208


State 164

   78 sub_arg_decl_list: sub_arg_decl_list ';' sub_arg_decl .

    $default  reduce using rule 78 (sub_arg_decl_list)


State 165

   46 data_type: . basic_data_type
   47          | . array_of_type
   48 basic_data_type: . KW_INTEGER
   49                | . KW_BOOLEAN
   50                | . KW_CHAR
   51                | . KW_REAL
   52                | . IDENT
   53 array_of_type: . KW_ARRAY KW_OF basic_data_type
   60 type_decl: IDENT '=' KW_FUNCTION '(' sub_arg_decl_list ')' ':' . data_type ';'

    IDENT       shift, and go to state 21
    KW_ARRAY    shift, and go to state 162
    KW_BOOLEAN  shift, and go to state 24
    KW_REAL     shift, and go to state 25
    KW_CHAR     shift, and go to state 26
    KW_INTEGER  shift, and go to state 27

    data_type        go to state 209
    basic_data_type  go to state 29
    array_of_type    go to state 30


State 166

   81 sub_arg_decl: var_ident ':' KW_FUNCTION . '(' sub_arg_decl_list ')' ':' data_type
   82             | var_ident ':' KW_FUNCTION . '(' ')' ':' data_type

    '('  shift, and go to state 210


State 167

   53 array_of_type: KW_ARRAY . KW_OF basic_data_type
   80 sub_arg_decl: var_ident ':' KW_ARRAY . array_size KW_OF basic_data_type
   88 array_size: . '[' expression ']'
   89           | . '[' expression ']' array_size

    KW_OF  shift, and go to state 41
    '['    shift, and go to state 42

    array_size  go to state 211


State 168

   79 sub_arg_decl: var_ident ':' data_type .

    $default  reduce using rule 79 (sub_arg_decl)


State 169

   23 expression: '(' expression ')' .

    $default  reduce using rule 23 (expression)


State 170

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   43           | expression KW_AND expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, ';', ')', ',', ']']
   44           | expression . KW_OR expression

    KW_DIV        shift, and go to state 124
    KW_MOD        shift, and go to state 125
    OP_INEQUAL    shift, and go to state 127
    OP_LESSEQ     shift, and go to state 128
    OP_GREATEREQ  shift, and go to state 129
    '='           shift, and go to state 130
    '<'           shift, and go to state 131
    '>'           shift, and go to state 132
    '-'           shift, and go to state 133
    '+'           shift, and go to state 134
    '*'           shift, and go to state 135
    '/'           shift, and go to state 136

    $default  reduce using rule 43 (expression)

    Conflict between rule 43 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 43 and token KW_DIV resolved as shift (KW_AND < KW_DIV).
    Conflict between rule 43 and token KW_MOD resolved as shift (KW_AND < KW_MOD).
    Conflict between rule 43 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 43 and token OP_INEQUAL resolved as shift (KW_AND < OP_INEQUAL).
    Conflict between rule 43 and token OP_LESSEQ resolved as shift (KW_AND < OP_LESSEQ).
    Conflict between rule 43 and token OP_GREATEREQ resolved as shift (KW_AND < OP_GREATEREQ).
    Conflict between rule 43 and token '=' resolved as shift (KW_AND < '=').
    Conflict between rule 43 and token '<' resolved as shift (KW_AND < '<').
    Conflict between rule 43 and token '>' resolved as shift (KW_AND < '>').
    Conflict between rule 43 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 43 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 43 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 43 and token '/' resolved as shift (KW_AND < '/').


State 171

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   32           | expression KW_DIV expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    $default  reduce using rule 32 (expression)

    Conflict between rule 32 and token KW_AND resolved as reduce (KW_AND < KW_DIV).
    Conflict between rule 32 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 32 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 32 and token KW_OR resolved as reduce (KW_OR < KW_DIV).
    Conflict between rule 32 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < KW_DIV).
    Conflict between rule 32 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < KW_DIV).
    Conflict between rule 32 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < KW_DIV).
    Conflict between rule 32 and token '=' resolved as reduce ('=' < KW_DIV).
    Conflict between rule 32 and token '<' resolved as reduce ('<' < KW_DIV).
    Conflict between rule 32 and token '>' resolved as reduce ('>' < KW_DIV).
    Conflict between rule 32 and token '-' resolved as reduce ('-' < KW_DIV).
    Conflict between rule 32 and token '+' resolved as reduce ('+' < KW_DIV).
    Conflict between rule 32 and token '*' resolved as reduce (%left '*').
    Conflict between rule 32 and token '/' resolved as reduce (%left '/').


State 172

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   33           | expression KW_MOD expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    $default  reduce using rule 33 (expression)

    Conflict between rule 33 and token KW_AND resolved as reduce (KW_AND < KW_MOD).
    Conflict between rule 33 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 33 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 33 and token KW_OR resolved as reduce (KW_OR < KW_MOD).
    Conflict between rule 33 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < KW_MOD).
    Conflict between rule 33 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < KW_MOD).
    Conflict between rule 33 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < KW_MOD).
    Conflict between rule 33 and token '=' resolved as reduce ('=' < KW_MOD).
    Conflict between rule 33 and token '<' resolved as reduce ('<' < KW_MOD).
    Conflict between rule 33 and token '>' resolved as reduce ('>' < KW_MOD).
    Conflict between rule 33 and token '-' resolved as reduce ('-' < KW_MOD).
    Conflict between rule 33 and token '+' resolved as reduce ('+' < KW_MOD).
    Conflict between rule 33 and token '*' resolved as reduce (%left '*').
    Conflict between rule 33 and token '/' resolved as reduce (%left '/').


State 173

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression
   44           | expression KW_OR expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, ';', ')', ',', ']']

    KW_AND        shift, and go to state 123
    KW_DIV        shift, and go to state 124
    KW_MOD        shift, and go to state 125
    OP_INEQUAL    shift, and go to state 127
    OP_LESSEQ     shift, and go to state 128
    OP_GREATEREQ  shift, and go to state 129
    '='           shift, and go to state 130
    '<'           shift, and go to state 131
    '>'           shift, and go to state 132
    '-'           shift, and go to state 133
    '+'           shift, and go to state 134
    '*'           shift, and go to state 135
    '/'           shift, and go to state 136

    $default  reduce using rule 44 (expression)

    Conflict between rule 44 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 44 and token KW_DIV resolved as shift (KW_OR < KW_DIV).
    Conflict between rule 44 and token KW_MOD resolved as shift (KW_OR < KW_MOD).
    Conflict between rule 44 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 44 and token OP_INEQUAL resolved as shift (KW_OR < OP_INEQUAL).
    Conflict between rule 44 and token OP_LESSEQ resolved as shift (KW_OR < OP_LESSEQ).
    Conflict between rule 44 and token OP_GREATEREQ resolved as shift (KW_OR < OP_GREATEREQ).
    Conflict between rule 44 and token '=' resolved as shift (KW_OR < '=').
    Conflict between rule 44 and token '<' resolved as shift (KW_OR < '<').
    Conflict between rule 44 and token '>' resolved as shift (KW_OR < '>').
    Conflict between rule 44 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 44 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 44 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 44 and token '/' resolved as shift (KW_OR < '/').


State 174

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   38           | expression OP_INEQUAL expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', ';', ')', ',', ']']
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    KW_DIV  shift, and go to state 124
    KW_MOD  shift, and go to state 125
    '-'     shift, and go to state 133
    '+'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136

    $default  reduce using rule 38 (expression)

    Conflict between rule 38 and token KW_AND resolved as reduce (KW_AND < OP_INEQUAL).
    Conflict between rule 38 and token KW_DIV resolved as shift (OP_INEQUAL < KW_DIV).
    Conflict between rule 38 and token KW_MOD resolved as shift (OP_INEQUAL < KW_MOD).
    Conflict between rule 38 and token KW_OR resolved as reduce (KW_OR < OP_INEQUAL).
    Conflict between rule 38 and token OP_INEQUAL resolved as reduce (%left OP_INEQUAL).
    Conflict between rule 38 and token OP_LESSEQ resolved as reduce (%left OP_LESSEQ).
    Conflict between rule 38 and token OP_GREATEREQ resolved as reduce (%left OP_GREATEREQ).
    Conflict between rule 38 and token '=' resolved as reduce (%left '=').
    Conflict between rule 38 and token '<' resolved as reduce (%left '<').
    Conflict between rule 38 and token '>' resolved as reduce (%left '>').
    Conflict between rule 38 and token '-' resolved as shift (OP_INEQUAL < '-').
    Conflict between rule 38 and token '+' resolved as shift (OP_INEQUAL < '+').
    Conflict between rule 38 and token '*' resolved as shift (OP_INEQUAL < '*').
    Conflict between rule 38 and token '/' resolved as shift (OP_INEQUAL < '/').


State 175

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   41           | expression OP_LESSEQ expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', ';', ')', ',', ']']
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    KW_DIV  shift, and go to state 124
    KW_MOD  shift, and go to state 125
    '-'     shift, and go to state 133
    '+'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136

    $default  reduce using rule 41 (expression)

    Conflict between rule 41 and token KW_AND resolved as reduce (KW_AND < OP_LESSEQ).
    Conflict between rule 41 and token KW_DIV resolved as shift (OP_LESSEQ < KW_DIV).
    Conflict between rule 41 and token KW_MOD resolved as shift (OP_LESSEQ < KW_MOD).
    Conflict between rule 41 and token KW_OR resolved as reduce (KW_OR < OP_LESSEQ).
    Conflict between rule 41 and token OP_INEQUAL resolved as reduce (%left OP_INEQUAL).
    Conflict between rule 41 and token OP_LESSEQ resolved as reduce (%left OP_LESSEQ).
    Conflict between rule 41 and token OP_GREATEREQ resolved as reduce (%left OP_GREATEREQ).
    Conflict between rule 41 and token '=' resolved as reduce (%left '=').
    Conflict between rule 41 and token '<' resolved as reduce (%left '<').
    Conflict between rule 41 and token '>' resolved as reduce (%left '>').
    Conflict between rule 41 and token '-' resolved as shift (OP_LESSEQ < '-').
    Conflict between rule 41 and token '+' resolved as shift (OP_LESSEQ < '+').
    Conflict between rule 41 and token '*' resolved as shift (OP_LESSEQ < '*').
    Conflict between rule 41 and token '/' resolved as shift (OP_LESSEQ < '/').


State 176

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   42           | expression OP_GREATEREQ expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', ';', ')', ',', ']']
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    KW_DIV  shift, and go to state 124
    KW_MOD  shift, and go to state 125
    '-'     shift, and go to state 133
    '+'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136

    $default  reduce using rule 42 (expression)

    Conflict between rule 42 and token KW_AND resolved as reduce (KW_AND < OP_GREATEREQ).
    Conflict between rule 42 and token KW_DIV resolved as shift (OP_GREATEREQ < KW_DIV).
    Conflict between rule 42 and token KW_MOD resolved as shift (OP_GREATEREQ < KW_MOD).
    Conflict between rule 42 and token KW_OR resolved as reduce (KW_OR < OP_GREATEREQ).
    Conflict between rule 42 and token OP_INEQUAL resolved as reduce (%left OP_INEQUAL).
    Conflict between rule 42 and token OP_LESSEQ resolved as reduce (%left OP_LESSEQ).
    Conflict between rule 42 and token OP_GREATEREQ resolved as reduce (%left OP_GREATEREQ).
    Conflict between rule 42 and token '=' resolved as reduce (%left '=').
    Conflict between rule 42 and token '<' resolved as reduce (%left '<').
    Conflict between rule 42 and token '>' resolved as reduce (%left '>').
    Conflict between rule 42 and token '-' resolved as shift (OP_GREATEREQ < '-').
    Conflict between rule 42 and token '+' resolved as shift (OP_GREATEREQ < '+').
    Conflict between rule 42 and token '*' resolved as shift (OP_GREATEREQ < '*').
    Conflict between rule 42 and token '/' resolved as shift (OP_GREATEREQ < '/').


State 177

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   37           | expression '=' expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', ';', ')', ',', ']']
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    KW_DIV  shift, and go to state 124
    KW_MOD  shift, and go to state 125
    '-'     shift, and go to state 133
    '+'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136

    $default  reduce using rule 37 (expression)

    Conflict between rule 37 and token KW_AND resolved as reduce (KW_AND < '=').
    Conflict between rule 37 and token KW_DIV resolved as shift ('=' < KW_DIV).
    Conflict between rule 37 and token KW_MOD resolved as shift ('=' < KW_MOD).
    Conflict between rule 37 and token KW_OR resolved as reduce (KW_OR < '=').
    Conflict between rule 37 and token OP_INEQUAL resolved as reduce (%left OP_INEQUAL).
    Conflict between rule 37 and token OP_LESSEQ resolved as reduce (%left OP_LESSEQ).
    Conflict between rule 37 and token OP_GREATEREQ resolved as reduce (%left OP_GREATEREQ).
    Conflict between rule 37 and token '=' resolved as reduce (%left '=').
    Conflict between rule 37 and token '<' resolved as reduce (%left '<').
    Conflict between rule 37 and token '>' resolved as reduce (%left '>').
    Conflict between rule 37 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 37 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 37 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 37 and token '/' resolved as shift ('=' < '/').


State 178

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   39           | expression '<' expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', ';', ')', ',', ']']
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    KW_DIV  shift, and go to state 124
    KW_MOD  shift, and go to state 125
    '-'     shift, and go to state 133
    '+'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136

    $default  reduce using rule 39 (expression)

    Conflict between rule 39 and token KW_AND resolved as reduce (KW_AND < '<').
    Conflict between rule 39 and token KW_DIV resolved as shift ('<' < KW_DIV).
    Conflict between rule 39 and token KW_MOD resolved as shift ('<' < KW_MOD).
    Conflict between rule 39 and token KW_OR resolved as reduce (KW_OR < '<').
    Conflict between rule 39 and token OP_INEQUAL resolved as reduce (%left OP_INEQUAL).
    Conflict between rule 39 and token OP_LESSEQ resolved as reduce (%left OP_LESSEQ).
    Conflict between rule 39 and token OP_GREATEREQ resolved as reduce (%left OP_GREATEREQ).
    Conflict between rule 39 and token '=' resolved as reduce (%left '=').
    Conflict between rule 39 and token '<' resolved as reduce (%left '<').
    Conflict between rule 39 and token '>' resolved as reduce (%left '>').
    Conflict between rule 39 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 39 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 39 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 39 and token '/' resolved as shift ('<' < '/').


State 179

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   40           | expression '>' expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', ';', ')', ',', ']']
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    KW_DIV  shift, and go to state 124
    KW_MOD  shift, and go to state 125
    '-'     shift, and go to state 133
    '+'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136

    $default  reduce using rule 40 (expression)

    Conflict between rule 40 and token KW_AND resolved as reduce (KW_AND < '>').
    Conflict between rule 40 and token KW_DIV resolved as shift ('>' < KW_DIV).
    Conflict between rule 40 and token KW_MOD resolved as shift ('>' < KW_MOD).
    Conflict between rule 40 and token KW_OR resolved as reduce (KW_OR < '>').
    Conflict between rule 40 and token OP_INEQUAL resolved as reduce (%left OP_INEQUAL).
    Conflict between rule 40 and token OP_LESSEQ resolved as reduce (%left OP_LESSEQ).
    Conflict between rule 40 and token OP_GREATEREQ resolved as reduce (%left OP_GREATEREQ).
    Conflict between rule 40 and token '=' resolved as reduce (%left '=').
    Conflict between rule 40 and token '<' resolved as reduce (%left '<').
    Conflict between rule 40 and token '>' resolved as reduce (%left '>').
    Conflict between rule 40 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 40 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 40 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 40 and token '/' resolved as shift ('>' < '/').


State 180

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   29           | expression '-' expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', ';', ')', ',', ']']
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    KW_DIV  shift, and go to state 124
    KW_MOD  shift, and go to state 125
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136

    $default  reduce using rule 29 (expression)

    Conflict between rule 29 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 29 and token KW_DIV resolved as shift ('-' < KW_DIV).
    Conflict between rule 29 and token KW_MOD resolved as shift ('-' < KW_MOD).
    Conflict between rule 29 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 29 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < '-').
    Conflict between rule 29 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < '-').
    Conflict between rule 29 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < '-').
    Conflict between rule 29 and token '=' resolved as reduce ('=' < '-').
    Conflict between rule 29 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 29 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 29 and token '-' resolved as reduce (%left '-').
    Conflict between rule 29 and token '+' resolved as reduce (%left '+').
    Conflict between rule 29 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 29 and token '/' resolved as shift ('-' < '/').


State 181

   28 expression: expression . '+' expression
   28           | expression '+' expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', ';', ')', ',', ']']
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    KW_DIV  shift, and go to state 124
    KW_MOD  shift, and go to state 125
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136

    $default  reduce using rule 28 (expression)

    Conflict between rule 28 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 28 and token KW_DIV resolved as shift ('+' < KW_DIV).
    Conflict between rule 28 and token KW_MOD resolved as shift ('+' < KW_MOD).
    Conflict between rule 28 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 28 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < '+').
    Conflict between rule 28 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < '+').
    Conflict between rule 28 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < '+').
    Conflict between rule 28 and token '=' resolved as reduce ('=' < '+').
    Conflict between rule 28 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 28 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 28 and token '-' resolved as reduce (%left '-').
    Conflict between rule 28 and token '+' resolved as reduce (%left '+').
    Conflict between rule 28 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 28 and token '/' resolved as shift ('+' < '/').


State 182

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   30           | expression '*' expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    $default  reduce using rule 30 (expression)

    Conflict between rule 30 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 30 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 30 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 30 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 30 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < '*').
    Conflict between rule 30 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < '*').
    Conflict between rule 30 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < '*').
    Conflict between rule 30 and token '=' resolved as reduce ('=' < '*').
    Conflict between rule 30 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 30 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 30 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 30 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 30 and token '*' resolved as reduce (%left '*').
    Conflict between rule 30 and token '/' resolved as reduce (%left '/').


State 183

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   31           | expression '/' expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    $default  reduce using rule 31 (expression)

    Conflict between rule 31 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 31 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 31 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 31 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 31 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < '/').
    Conflict between rule 31 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < '/').
    Conflict between rule 31 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < '/').
    Conflict between rule 31 and token '=' resolved as reduce ('=' < '/').
    Conflict between rule 31 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 31 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 31 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 31 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 31 and token '*' resolved as reduce (%left '*').
    Conflict between rule 31 and token '/' resolved as reduce (%left '/').


State 184

   89 array_size: '[' expression ']' array_size .

    $default  reduce using rule 89 (array_size)


State 185

   59 type_decl: IDENT '=' KW_ARRAY array_size KW_OF basic_data_type ';' .

    $default  reduce using rule 59 (type_decl)


State 186

   46 data_type: . basic_data_type
   47          | . array_of_type
   48 basic_data_type: . KW_INTEGER
   49                | . KW_BOOLEAN
   50                | . KW_CHAR
   51                | . KW_REAL
   52                | . IDENT
   53 array_of_type: . KW_ARRAY KW_OF basic_data_type
   69 var_decl: var_ident ':' KW_FUNCTION '(' ')' ':' . data_type

    IDENT       shift, and go to state 21
    KW_ARRAY    shift, and go to state 162
    KW_BOOLEAN  shift, and go to state 24
    KW_REAL     shift, and go to state 25
    KW_CHAR     shift, and go to state 26
    KW_INTEGER  shift, and go to state 27

    data_type        go to state 212
    basic_data_type  go to state 29
    array_of_type    go to state 30


State 187

   68 var_decl: var_ident ':' KW_FUNCTION '(' sub_arg_decl_list ')' . ':' data_type

    ':'  shift, and go to state 213


State 188

   67 var_decl: var_ident ':' KW_ARRAY array_size KW_OF basic_data_type .

    $default  reduce using rule 67 (var_decl)


State 189

   11 proc_call: IDENT '(' arguments ')' .

    $default  reduce using rule 11 (proc_call)


State 190

   11 proc_call: . IDENT '(' arguments ')'
   15 arglist: arglist ',' . expression
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 214


State 191

  102 instruction: IDENT array_call ASSIGN LIB_RS . '(' ')'

    '('  shift, and go to state 215


State 192

  103 instruction: IDENT array_call ASSIGN LIB_RI . '(' ')'

    '('  shift, and go to state 216


State 193

  104 instruction: IDENT array_call ASSIGN LIB_RR . '(' ')'

    '('  shift, and go to state 217


State 194

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression
   91 instruction: IDENT array_call ASSIGN expression .  [KW_END, KW_ELSE, KW_UNTIL, ';']

    KW_AND        shift, and go to state 123
    KW_DIV        shift, and go to state 124
    KW_MOD        shift, and go to state 125
    KW_OR         shift, and go to state 126
    OP_INEQUAL    shift, and go to state 127
    OP_LESSEQ     shift, and go to state 128
    OP_GREATEREQ  shift, and go to state 129
    '='           shift, and go to state 130
    '<'           shift, and go to state 131
    '>'           shift, and go to state 132
    '-'           shift, and go to state 133
    '+'           shift, and go to state 134
    '*'           shift, and go to state 135
    '/'           shift, and go to state 136

    $default  reduce using rule 91 (instruction)


State 195

  105 instruction: KW_RESULT ASSIGN LIB_RS '(' . ')'

    ')'  shift, and go to state 218


State 196

  106 instruction: KW_RESULT ASSIGN LIB_RI '(' . ')'

    ')'  shift, and go to state 219


State 197

  107 instruction: KW_RESULT ASSIGN LIB_RR '(' . ')'

    ')'  shift, and go to state 220


State 198

   93 instruction: KW_IF expression KW_THEN statement .  [KW_END, KW_UNTIL, ';']
   94            | KW_IF expression KW_THEN statement . KW_ELSE statement

    KW_ELSE  shift, and go to state 221

    $default  reduce using rule 93 (instruction)

    Conflict between rule 93 and token KW_ELSE resolved as shift (KW_THEN < KW_ELSE).


State 199

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call
   95 instruction: KW_FOR IDENT array_call ASSIGN . expression KW_TO expression KW_DO statement
   96            | KW_FOR IDENT array_call ASSIGN . expression KW_DOWNTO expression KW_DO statement

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 222


State 200

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression
   98 instruction: KW_REPEAT statement KW_UNTIL expression .  [KW_END, KW_ELSE, KW_UNTIL, ';']

    KW_AND        shift, and go to state 123
    KW_DIV        shift, and go to state 124
    KW_MOD        shift, and go to state 125
    KW_OR         shift, and go to state 126
    OP_INEQUAL    shift, and go to state 127
    OP_LESSEQ     shift, and go to state 128
    OP_GREATEREQ  shift, and go to state 129
    '='           shift, and go to state 130
    '<'           shift, and go to state 131
    '>'           shift, and go to state 132
    '-'           shift, and go to state 133
    '+'           shift, and go to state 134
    '*'           shift, and go to state 135
    '/'           shift, and go to state 136

    $default  reduce using rule 98 (instruction)


State 201

   97 instruction: KW_WHILE expression KW_DO statement .

    $default  reduce using rule 97 (instruction)


State 202

   46 data_type: . basic_data_type
   47          | . array_of_type
   48 basic_data_type: . KW_INTEGER
   49                | . KW_BOOLEAN
   50                | . KW_CHAR
   51                | . KW_REAL
   52                | . IDENT
   53 array_of_type: . KW_ARRAY KW_OF basic_data_type
   76 subroutine_decl: KW_FUNCTION IDENT '(' ')' ':' . data_type ';'

    IDENT       shift, and go to state 21
    KW_ARRAY    shift, and go to state 162
    KW_BOOLEAN  shift, and go to state 24
    KW_REAL     shift, and go to state 25
    KW_CHAR     shift, and go to state 26
    KW_INTEGER  shift, and go to state 27

    data_type        go to state 223
    basic_data_type  go to state 29
    array_of_type    go to state 30


State 203

   75 subroutine_decl: KW_FUNCTION IDENT '(' sub_arg_decl_list ')' . ':' data_type ';'

    ':'  shift, and go to state 224


State 204

   74 subroutine_decl: KW_PROCEDURE IDENT '(' ')' ';' .

    $default  reduce using rule 74 (subroutine_decl)


State 205

   73 subroutine_decl: KW_PROCEDURE IDENT '(' sub_arg_decl_list ')' . ';'

    ';'  shift, and go to state 225


State 206

    4 body: . KW_BEGIN statements KW_END
    5 statements: . %empty  [KW_END]
    6           | . statement_list
    7 statement_list: . statement
    8               | . statement_list ';' statement
    9 statement: . proc_call
   10          | . instruction
   11 proc_call: . IDENT '(' arguments ')'
   83 subroutine_body: KW_BEGIN . statements KW_END
   90 instruction: . body
   91            | . IDENT array_call ASSIGN expression
   92            | . KW_RESULT ASSIGN expression
   93            | . KW_IF expression KW_THEN statement
   94            | . KW_IF expression KW_THEN statement KW_ELSE statement
   95            | . KW_FOR IDENT array_call ASSIGN expression KW_TO expression KW_DO statement
   96            | . KW_FOR IDENT array_call ASSIGN expression KW_DOWNTO expression KW_DO statement
   97            | . KW_WHILE expression KW_DO statement
   98            | . KW_REPEAT statement KW_UNTIL expression
   99            | . IDENT ':' statement
  100            | . KW_GOTO IDENT
  101            | . KW_RETURN
  102            | . IDENT array_call ASSIGN LIB_RS '(' ')'
  103            | . IDENT array_call ASSIGN LIB_RI '(' ')'
  104            | . IDENT array_call ASSIGN LIB_RR '(' ')'
  105            | . KW_RESULT ASSIGN LIB_RS '(' ')'
  106            | . KW_RESULT ASSIGN LIB_RI '(' ')'
  107            | . KW_RESULT ASSIGN LIB_RR '(' ')'

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 51
    KW_RESULT  shift, and go to state 52
    KW_GOTO    shift, and go to state 53
    KW_RETURN  shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    $default  reduce using rule 5 (statements)

    body            go to state 59
    statements      go to state 226
    statement_list  go to state 61
    statement       go to state 62
    proc_call       go to state 63
    instruction     go to state 64


State 207

   72 subroutine: subroutine_decl type_declaration var_declaration subroutine_decl_list subroutine_body . ';'

    ';'  shift, and go to state 227


State 208

   61 type_decl: IDENT '=' KW_FUNCTION '(' ')' ':' data_type ';' .

    $default  reduce using rule 61 (type_decl)


State 209

   60 type_decl: IDENT '=' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type . ';'

    ';'  shift, and go to state 228


State 210

   77 sub_arg_decl_list: . sub_arg_decl
   78                  | . sub_arg_decl_list ';' sub_arg_decl
   79 sub_arg_decl: . var_ident ':' data_type
   80             | . var_ident ':' KW_ARRAY array_size KW_OF basic_data_type
   81             | . var_ident ':' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type
   81             | var_ident ':' KW_FUNCTION '(' . sub_arg_decl_list ')' ':' data_type
   82             | . var_ident ':' KW_FUNCTION '(' ')' ':' data_type
   82             | var_ident ':' KW_FUNCTION '(' . ')' ':' data_type
   84 var_ident: . IDENT
   85          | . IDENT ',' var_ident

    IDENT  shift, and go to state 16
    ')'    shift, and go to state 229

    sub_arg_decl_list  go to state 230
    sub_arg_decl       go to state 71
    var_ident          go to state 72


State 211

   80 sub_arg_decl: var_ident ':' KW_ARRAY array_size . KW_OF basic_data_type

    KW_OF  shift, and go to state 231


State 212

   69 var_decl: var_ident ':' KW_FUNCTION '(' ')' ':' data_type .

    $default  reduce using rule 69 (var_decl)


State 213

   46 data_type: . basic_data_type
   47          | . array_of_type
   48 basic_data_type: . KW_INTEGER
   49                | . KW_BOOLEAN
   50                | . KW_CHAR
   51                | . KW_REAL
   52                | . IDENT
   53 array_of_type: . KW_ARRAY KW_OF basic_data_type
   68 var_decl: var_ident ':' KW_FUNCTION '(' sub_arg_decl_list ')' ':' . data_type

    IDENT       shift, and go to state 21
    KW_ARRAY    shift, and go to state 162
    KW_BOOLEAN  shift, and go to state 24
    KW_REAL     shift, and go to state 25
    KW_CHAR     shift, and go to state 26
    KW_INTEGER  shift, and go to state 27

    data_type        go to state 232
    basic_data_type  go to state 29
    array_of_type    go to state 30


State 214

   15 arglist: arglist ',' expression .  [')', ',']
   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression

    KW_AND        shift, and go to state 123
    KW_DIV        shift, and go to state 124
    KW_MOD        shift, and go to state 125
    KW_OR         shift, and go to state 126
    OP_INEQUAL    shift, and go to state 127
    OP_LESSEQ     shift, and go to state 128
    OP_GREATEREQ  shift, and go to state 129
    '='           shift, and go to state 130
    '<'           shift, and go to state 131
    '>'           shift, and go to state 132
    '-'           shift, and go to state 133
    '+'           shift, and go to state 134
    '*'           shift, and go to state 135
    '/'           shift, and go to state 136

    $default  reduce using rule 15 (arglist)


State 215

  102 instruction: IDENT array_call ASSIGN LIB_RS '(' . ')'

    ')'  shift, and go to state 233


State 216

  103 instruction: IDENT array_call ASSIGN LIB_RI '(' . ')'

    ')'  shift, and go to state 234


State 217

  104 instruction: IDENT array_call ASSIGN LIB_RR '(' . ')'

    ')'  shift, and go to state 235


State 218

  105 instruction: KW_RESULT ASSIGN LIB_RS '(' ')' .

    $default  reduce using rule 105 (instruction)


State 219

  106 instruction: KW_RESULT ASSIGN LIB_RI '(' ')' .

    $default  reduce using rule 106 (instruction)


State 220

  107 instruction: KW_RESULT ASSIGN LIB_RR '(' ')' .

    $default  reduce using rule 107 (instruction)


State 221

    4 body: . KW_BEGIN statements KW_END
    9 statement: . proc_call
   10          | . instruction
   11 proc_call: . IDENT '(' arguments ')'
   90 instruction: . body
   91            | . IDENT array_call ASSIGN expression
   92            | . KW_RESULT ASSIGN expression
   93            | . KW_IF expression KW_THEN statement
   94            | . KW_IF expression KW_THEN statement KW_ELSE statement
   94            | KW_IF expression KW_THEN statement KW_ELSE . statement
   95            | . KW_FOR IDENT array_call ASSIGN expression KW_TO expression KW_DO statement
   96            | . KW_FOR IDENT array_call ASSIGN expression KW_DOWNTO expression KW_DO statement
   97            | . KW_WHILE expression KW_DO statement
   98            | . KW_REPEAT statement KW_UNTIL expression
   99            | . IDENT ':' statement
  100            | . KW_GOTO IDENT
  101            | . KW_RETURN
  102            | . IDENT array_call ASSIGN LIB_RS '(' ')'
  103            | . IDENT array_call ASSIGN LIB_RI '(' ')'
  104            | . IDENT array_call ASSIGN LIB_RR '(' ')'
  105            | . KW_RESULT ASSIGN LIB_RS '(' ')'
  106            | . KW_RESULT ASSIGN LIB_RI '(' ')'
  107            | . KW_RESULT ASSIGN LIB_RR '(' ')'

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 51
    KW_RESULT  shift, and go to state 52
    KW_GOTO    shift, and go to state 53
    KW_RETURN  shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    body         go to state 59
    statement    go to state 236
    proc_call    go to state 63
    instruction  go to state 64


State 222

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression
   95 instruction: KW_FOR IDENT array_call ASSIGN expression . KW_TO expression KW_DO statement
   96            | KW_FOR IDENT array_call ASSIGN expression . KW_DOWNTO expression KW_DO statement

    KW_AND        shift, and go to state 123
    KW_DIV        shift, and go to state 124
    KW_MOD        shift, and go to state 125
    KW_OR         shift, and go to state 126
    KW_TO         shift, and go to state 237
    KW_DOWNTO     shift, and go to state 238
    OP_INEQUAL    shift, and go to state 127
    OP_LESSEQ     shift, and go to state 128
    OP_GREATEREQ  shift, and go to state 129
    '='           shift, and go to state 130
    '<'           shift, and go to state 131
    '>'           shift, and go to state 132
    '-'           shift, and go to state 133
    '+'           shift, and go to state 134
    '*'           shift, and go to state 135
    '/'           shift, and go to state 136


State 223

   76 subroutine_decl: KW_FUNCTION IDENT '(' ')' ':' data_type . ';'

    ';'  shift, and go to state 239


State 224

   46 data_type: . basic_data_type
   47          | . array_of_type
   48 basic_data_type: . KW_INTEGER
   49                | . KW_BOOLEAN
   50                | . KW_CHAR
   51                | . KW_REAL
   52                | . IDENT
   53 array_of_type: . KW_ARRAY KW_OF basic_data_type
   75 subroutine_decl: KW_FUNCTION IDENT '(' sub_arg_decl_list ')' ':' . data_type ';'

    IDENT       shift, and go to state 21
    KW_ARRAY    shift, and go to state 162
    KW_BOOLEAN  shift, and go to state 24
    KW_REAL     shift, and go to state 25
    KW_CHAR     shift, and go to state 26
    KW_INTEGER  shift, and go to state 27

    data_type        go to state 240
    basic_data_type  go to state 29
    array_of_type    go to state 30


State 225

   73 subroutine_decl: KW_PROCEDURE IDENT '(' sub_arg_decl_list ')' ';' .

    $default  reduce using rule 73 (subroutine_decl)


State 226

   83 subroutine_body: KW_BEGIN statements . KW_END

    KW_END  shift, and go to state 241


State 227

   72 subroutine: subroutine_decl type_declaration var_declaration subroutine_decl_list subroutine_body ';' .

    $default  reduce using rule 72 (subroutine)


State 228

   60 type_decl: IDENT '=' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type ';' .

    $default  reduce using rule 60 (type_decl)


State 229

   82 sub_arg_decl: var_ident ':' KW_FUNCTION '(' ')' . ':' data_type

    ':'  shift, and go to state 242


State 230

   78 sub_arg_decl_list: sub_arg_decl_list . ';' sub_arg_decl
   81 sub_arg_decl: var_ident ':' KW_FUNCTION '(' sub_arg_decl_list . ')' ':' data_type

    ';'  shift, and go to state 111
    ')'  shift, and go to state 243


State 231

   48 basic_data_type: . KW_INTEGER
   49                | . KW_BOOLEAN
   50                | . KW_CHAR
   51                | . KW_REAL
   52                | . IDENT
   80 sub_arg_decl: var_ident ':' KW_ARRAY array_size KW_OF . basic_data_type

    IDENT       shift, and go to state 21
    KW_BOOLEAN  shift, and go to state 24
    KW_REAL     shift, and go to state 25
    KW_CHAR     shift, and go to state 26
    KW_INTEGER  shift, and go to state 27

    basic_data_type  go to state 244


State 232

   68 var_decl: var_ident ':' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type .

    $default  reduce using rule 68 (var_decl)


State 233

  102 instruction: IDENT array_call ASSIGN LIB_RS '(' ')' .

    $default  reduce using rule 102 (instruction)


State 234

  103 instruction: IDENT array_call ASSIGN LIB_RI '(' ')' .

    $default  reduce using rule 103 (instruction)


State 235

  104 instruction: IDENT array_call ASSIGN LIB_RR '(' ')' .

    $default  reduce using rule 104 (instruction)


State 236

   94 instruction: KW_IF expression KW_THEN statement KW_ELSE statement .

    $default  reduce using rule 94 (instruction)


State 237

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call
   95 instruction: KW_FOR IDENT array_call ASSIGN expression KW_TO . expression KW_DO statement

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 245


State 238

   11 proc_call: . IDENT '(' arguments ')'
   16 expression: . POSINT
   17           | . REAL
   18           | . IDENT array_call
   19           | . KW_RESULT
   20           | . KW_TRUE
   21           | . KW_FALSE
   22           | . STRING
   23           | . '(' expression ')'
   24           | . CAST_INTEGER expression
   25           | . CAST_BOOLEAN expression
   26           | . CAST_CHAR expression
   27           | . CAST_REAL expression
   28           | . expression '+' expression
   29           | . expression '-' expression
   30           | . expression '*' expression
   31           | . expression '/' expression
   32           | . expression KW_DIV expression
   33           | . expression KW_MOD expression
   34           | . KW_NOT expression
   35           | . '-' expression
   36           | . '+' expression
   37           | . expression '=' expression
   38           | . expression OP_INEQUAL expression
   39           | . expression '<' expression
   40           | . expression '>' expression
   41           | . expression OP_LESSEQ expression
   42           | . expression OP_GREATEREQ expression
   43           | . expression KW_AND expression
   44           | . expression KW_OR expression
   45           | . proc_call
   96 instruction: KW_FOR IDENT array_call ASSIGN expression KW_DOWNTO . expression KW_DO statement

    IDENT         shift, and go to state 74
    POSINT        shift, and go to state 75
    REAL          shift, and go to state 76
    STRING        shift, and go to state 77
    KW_RESULT     shift, and go to state 78
    KW_NOT        shift, and go to state 79
    KW_TRUE       shift, and go to state 80
    KW_FALSE      shift, and go to state 81
    CAST_INTEGER  shift, and go to state 82
    CAST_BOOLEAN  shift, and go to state 83
    CAST_CHAR     shift, and go to state 84
    CAST_REAL     shift, and go to state 85
    '-'           shift, and go to state 86
    '+'           shift, and go to state 87
    '('           shift, and go to state 88

    proc_call   go to state 89
    expression  go to state 246


State 239

   76 subroutine_decl: KW_FUNCTION IDENT '(' ')' ':' data_type ';' .

    $default  reduce using rule 76 (subroutine_decl)


State 240

   75 subroutine_decl: KW_FUNCTION IDENT '(' sub_arg_decl_list ')' ':' data_type . ';'

    ';'  shift, and go to state 247


State 241

   83 subroutine_body: KW_BEGIN statements KW_END .

    $default  reduce using rule 83 (subroutine_body)


State 242

   46 data_type: . basic_data_type
   47          | . array_of_type
   48 basic_data_type: . KW_INTEGER
   49                | . KW_BOOLEAN
   50                | . KW_CHAR
   51                | . KW_REAL
   52                | . IDENT
   53 array_of_type: . KW_ARRAY KW_OF basic_data_type
   82 sub_arg_decl: var_ident ':' KW_FUNCTION '(' ')' ':' . data_type

    IDENT       shift, and go to state 21
    KW_ARRAY    shift, and go to state 162
    KW_BOOLEAN  shift, and go to state 24
    KW_REAL     shift, and go to state 25
    KW_CHAR     shift, and go to state 26
    KW_INTEGER  shift, and go to state 27

    data_type        go to state 248
    basic_data_type  go to state 29
    array_of_type    go to state 30


State 243

   81 sub_arg_decl: var_ident ':' KW_FUNCTION '(' sub_arg_decl_list ')' . ':' data_type

    ':'  shift, and go to state 249


State 244

   80 sub_arg_decl: var_ident ':' KW_ARRAY array_size KW_OF basic_data_type .

    $default  reduce using rule 80 (sub_arg_decl)


State 245

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression
   95 instruction: KW_FOR IDENT array_call ASSIGN expression KW_TO expression . KW_DO statement

    KW_AND        shift, and go to state 123
    KW_DIV        shift, and go to state 124
    KW_MOD        shift, and go to state 125
    KW_DO         shift, and go to state 250
    KW_OR         shift, and go to state 126
    OP_INEQUAL    shift, and go to state 127
    OP_LESSEQ     shift, and go to state 128
    OP_GREATEREQ  shift, and go to state 129
    '='           shift, and go to state 130
    '<'           shift, and go to state 131
    '>'           shift, and go to state 132
    '-'           shift, and go to state 133
    '+'           shift, and go to state 134
    '*'           shift, and go to state 135
    '/'           shift, and go to state 136


State 246

   28 expression: expression . '+' expression
   29           | expression . '-' expression
   30           | expression . '*' expression
   31           | expression . '/' expression
   32           | expression . KW_DIV expression
   33           | expression . KW_MOD expression
   37           | expression . '=' expression
   38           | expression . OP_INEQUAL expression
   39           | expression . '<' expression
   40           | expression . '>' expression
   41           | expression . OP_LESSEQ expression
   42           | expression . OP_GREATEREQ expression
   43           | expression . KW_AND expression
   44           | expression . KW_OR expression
   96 instruction: KW_FOR IDENT array_call ASSIGN expression KW_DOWNTO expression . KW_DO statement

    KW_AND        shift, and go to state 123
    KW_DIV        shift, and go to state 124
    KW_MOD        shift, and go to state 125
    KW_DO         shift, and go to state 251
    KW_OR         shift, and go to state 126
    OP_INEQUAL    shift, and go to state 127
    OP_LESSEQ     shift, and go to state 128
    OP_GREATEREQ  shift, and go to state 129
    '='           shift, and go to state 130
    '<'           shift, and go to state 131
    '>'           shift, and go to state 132
    '-'           shift, and go to state 133
    '+'           shift, and go to state 134
    '*'           shift, and go to state 135
    '/'           shift, and go to state 136


State 247

   75 subroutine_decl: KW_FUNCTION IDENT '(' sub_arg_decl_list ')' ':' data_type ';' .

    $default  reduce using rule 75 (subroutine_decl)


State 248

   82 sub_arg_decl: var_ident ':' KW_FUNCTION '(' ')' ':' data_type .

    $default  reduce using rule 82 (sub_arg_decl)


State 249

   46 data_type: . basic_data_type
   47          | . array_of_type
   48 basic_data_type: . KW_INTEGER
   49                | . KW_BOOLEAN
   50                | . KW_CHAR
   51                | . KW_REAL
   52                | . IDENT
   53 array_of_type: . KW_ARRAY KW_OF basic_data_type
   81 sub_arg_decl: var_ident ':' KW_FUNCTION '(' sub_arg_decl_list ')' ':' . data_type

    IDENT       shift, and go to state 21
    KW_ARRAY    shift, and go to state 162
    KW_BOOLEAN  shift, and go to state 24
    KW_REAL     shift, and go to state 25
    KW_CHAR     shift, and go to state 26
    KW_INTEGER  shift, and go to state 27

    data_type        go to state 252
    basic_data_type  go to state 29
    array_of_type    go to state 30


State 250

    4 body: . KW_BEGIN statements KW_END
    9 statement: . proc_call
   10          | . instruction
   11 proc_call: . IDENT '(' arguments ')'
   90 instruction: . body
   91            | . IDENT array_call ASSIGN expression
   92            | . KW_RESULT ASSIGN expression
   93            | . KW_IF expression KW_THEN statement
   94            | . KW_IF expression KW_THEN statement KW_ELSE statement
   95            | . KW_FOR IDENT array_call ASSIGN expression KW_TO expression KW_DO statement
   95            | KW_FOR IDENT array_call ASSIGN expression KW_TO expression KW_DO . statement
   96            | . KW_FOR IDENT array_call ASSIGN expression KW_DOWNTO expression KW_DO statement
   97            | . KW_WHILE expression KW_DO statement
   98            | . KW_REPEAT statement KW_UNTIL expression
   99            | . IDENT ':' statement
  100            | . KW_GOTO IDENT
  101            | . KW_RETURN
  102            | . IDENT array_call ASSIGN LIB_RS '(' ')'
  103            | . IDENT array_call ASSIGN LIB_RI '(' ')'
  104            | . IDENT array_call ASSIGN LIB_RR '(' ')'
  105            | . KW_RESULT ASSIGN LIB_RS '(' ')'
  106            | . KW_RESULT ASSIGN LIB_RI '(' ')'
  107            | . KW_RESULT ASSIGN LIB_RR '(' ')'

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 51
    KW_RESULT  shift, and go to state 52
    KW_GOTO    shift, and go to state 53
    KW_RETURN  shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    body         go to state 59
    statement    go to state 253
    proc_call    go to state 63
    instruction  go to state 64


State 251

    4 body: . KW_BEGIN statements KW_END
    9 statement: . proc_call
   10          | . instruction
   11 proc_call: . IDENT '(' arguments ')'
   90 instruction: . body
   91            | . IDENT array_call ASSIGN expression
   92            | . KW_RESULT ASSIGN expression
   93            | . KW_IF expression KW_THEN statement
   94            | . KW_IF expression KW_THEN statement KW_ELSE statement
   95            | . KW_FOR IDENT array_call ASSIGN expression KW_TO expression KW_DO statement
   96            | . KW_FOR IDENT array_call ASSIGN expression KW_DOWNTO expression KW_DO statement
   96            | KW_FOR IDENT array_call ASSIGN expression KW_DOWNTO expression KW_DO . statement
   97            | . KW_WHILE expression KW_DO statement
   98            | . KW_REPEAT statement KW_UNTIL expression
   99            | . IDENT ':' statement
  100            | . KW_GOTO IDENT
  101            | . KW_RETURN
  102            | . IDENT array_call ASSIGN LIB_RS '(' ')'
  103            | . IDENT array_call ASSIGN LIB_RI '(' ')'
  104            | . IDENT array_call ASSIGN LIB_RR '(' ')'
  105            | . KW_RESULT ASSIGN LIB_RS '(' ')'
  106            | . KW_RESULT ASSIGN LIB_RI '(' ')'
  107            | . KW_RESULT ASSIGN LIB_RR '(' ')'

    IDENT      shift, and go to state 50
    KW_BEGIN   shift, and go to state 51
    KW_RESULT  shift, and go to state 52
    KW_GOTO    shift, and go to state 53
    KW_RETURN  shift, and go to state 54
    KW_IF      shift, and go to state 55
    KW_FOR     shift, and go to state 56
    KW_REPEAT  shift, and go to state 57
    KW_WHILE   shift, and go to state 58

    body         go to state 59
    statement    go to state 254
    proc_call    go to state 63
    instruction  go to state 64


State 252

   81 sub_arg_decl: var_ident ':' KW_FUNCTION '(' sub_arg_decl_list ')' ':' data_type .

    $default  reduce using rule 81 (sub_arg_decl)


State 253

   95 instruction: KW_FOR IDENT array_call ASSIGN expression KW_TO expression KW_DO statement .

    $default  reduce using rule 95 (instruction)


State 254

   96 instruction: KW_FOR IDENT array_call ASSIGN expression KW_DOWNTO expression KW_DO statement .

    $default  reduce using rule 96 (instruction)
