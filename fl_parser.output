Terminals unused in grammar

   '!'


State 14 conflicts: 1 shift/reduce
State 43 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_decl type_decl var_decl subroutine_list body '.'

    2 program_decl: KW_PROGRAM IDENT ';'

    3 body: KW_BEGIN statements KW_END

    4 statements: %empty
    5           | statement_list

    6 statement_list: statement
    7               | statement_list ';' statement

    8 statement: instruction

    9 proc_call: IDENT '(' arguments ')'

   10 arguments: %empty
   11          | arglist

   12 arglist: expression
   13        | arglist ',' expression

   14 expression: POSINT
   15           | REAL
   16           | IDENT
   17           | KW_TRUE
   18           | KW_FALSE
   19           | STRING
   20           | '(' expression ')'
   21           | CAST_INTEGER expression
   22           | CAST_BOOLEAN expression
   23           | CAST_CHAR expression
   24           | CAST_REAL expression
   25           | expression '+' expression
   26           | expression '-' expression
   27           | expression '*' expression
   28           | expression '/' expression
   29           | expression KW_DIV expression
   30           | expression KW_MOD expression
   31           | KW_NOT expression
   32           | '-' expression
   33           | '+' expression
   34           | expression '=' expression
   35           | expression OP_INEQUAL expression
   36           | expression '<' expression
   37           | expression '>' expression
   38           | expression OP_LESSEQ expression
   39           | expression OP_GREATEREQ expression
   40           | expression KW_AND expression
   41           | expression KW_OR expression
   42           | proc_call
   43           | array_call

   44 data_type: KW_INTEGER
   45          | KW_BOOLEAN
   46          | KW_CHAR
   47          | KW_REAL
   48          | array_decl
   49          | func_data_type
   50          | IDENT

   51 func_data_type: KW_FUNCTION '(' var_decl_list ')' ':' data_type

   52 var_decl: %empty
   53         | KW_VAR var_decl_list ';'

   54 var_decl_list: var_ident ':' data_type
   55              | var_decl_list ';' var_decl_list

   56 var_ident: IDENT
   57          | IDENT ',' var_ident

   58 array_decl: KW_ARRAY array_size KW_OF data_type

   59 array_size: %empty
   60           | '[' expression ']' array_size

   61 array_call: IDENT array_call_size

   62 array_call_size: '[' expression ']' array_size

   63 type_decl: %empty
   64          | KW_TYPE type_decl_list

   65 type_decl_list: IDENT '=' data_type ';'
   66               | type_decl_list type_decl_list

   67 subroutine_list: %empty
   68                | subroutine_list subroutine

   69 subroutine: subroutine_decl type_decl var_decl subroutine_list body ';'

   70 subroutine_decl: KW_PROCEDURE IDENT '(' var_decl_list ')' ';'
   71                | KW_PROCEDURE IDENT '(' ')' ';'
   72                | KW_FUNCTION IDENT '(' var_decl_list ')' ':' data_type ';'
   73                | KW_FUNCTION IDENT '(' ')' ':' data_type ';'

   74 instruction: body
   75            | IDENT ASSIGN expression
   76            | KW_RESULT ASSIGN expression
   77            | KW_IF expression KW_THEN instruction
   78            | KW_IF expression KW_THEN instruction KW_ELSE instruction
   79            | KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO instruction
   80            | KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO instruction
   81            | KW_WHILE expression KW_DO instruction
   82            | KW_REPEAT instruction KW_UNTIL expression
   83            | IDENT ':' instruction
   84            | KW_GOTO IDENT
   85            | KW_RETURN
   86            | proc_call


Terminals, with rules where they appear

$end (0) 0
'!' (33)
'(' (40) 9 20 51 70 71 72 73
')' (41) 9 20 51 70 71 72 73
'*' (42) 27
'+' (43) 25 33
',' (44) 13 57
'-' (45) 26 32
'.' (46) 1
'/' (47) 28
':' (58) 51 54 72 73 83
';' (59) 2 7 53 55 65 69 70 71 72 73
'<' (60) 36
'=' (61) 34 65
'>' (62) 37
'[' (91) 60 62
']' (93) 60 62
error (256)
IDENT (258) 2 9 16 50 56 57 61 65 70 71 72 73 75 79 80 83 84
POSINT (259) 14
REAL (260) 15
STRING (261) 19
KW_PROGRAM (262) 2
KW_BEGIN (263) 3
KW_END (264) 3
KW_AND (265) 40
KW_DIV (266) 29
KW_FUNCTION (267) 51 72 73
KW_MOD (268) 30
KW_PROCEDURE (269) 70 71
KW_RESULT (270) 76
KW_ARRAY (271) 58
KW_DO (272) 79 80 81
KW_GOTO (273) 84
KW_NOT (274) 31
KW_RETURN (275) 85
KW_BOOLEAN (276) 45
KW_ELSE (277) 78
KW_IF (278) 77 78
KW_OF (279) 58
KW_REAL (280) 47
KW_THEN (281) 77 78
KW_CHAR (282) 46
KW_FOR (283) 79 80
KW_INTEGER (284) 44
KW_OR (285) 41
KW_REPEAT (286) 82
KW_UNTIL (287) 82
KW_VAR (288) 53
KW_WHILE (289) 81
KW_TO (290) 79
KW_DOWNTO (291) 80
KW_TYPE (292) 64
KW_TRUE (293) 17
KW_FALSE (294) 18
CAST_INTEGER (295) 21
CAST_BOOLEAN (296) 22
CAST_CHAR (297) 23
CAST_REAL (298) 24
OP_INEQUAL (299) 35
OP_LESSEQ (300) 38
OP_GREATEREQ (301) 39
ASSIGN (302) 75 76 79 80
UMINUS (303)
UPLUS (304)


Nonterminals, with rules where they appear

$accept (66)
    on left: 0
program (67)
    on left: 1, on right: 0
program_decl (68)
    on left: 2, on right: 1
body (69)
    on left: 3, on right: 1 69 74
statements (70)
    on left: 4 5, on right: 3
statement_list (71)
    on left: 6 7, on right: 5 7
statement (72)
    on left: 8, on right: 6 7
proc_call (73)
    on left: 9, on right: 42 86
arguments (74)
    on left: 10 11, on right: 9
arglist (75)
    on left: 12 13, on right: 11 13
expression (76)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
    32 33 34 35 36 37 38 39 40 41 42 43, on right: 12 13 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 60 62 75
    76 77 78 79 80 81 82
data_type (77)
    on left: 44 45 46 47 48 49 50, on right: 51 54 58 65 72 73
func_data_type (78)
    on left: 51, on right: 49
var_decl (79)
    on left: 52 53, on right: 1 69
var_decl_list (80)
    on left: 54 55, on right: 51 53 55 70 72
var_ident (81)
    on left: 56 57, on right: 54 57
array_decl (82)
    on left: 58, on right: 48
array_size (83)
    on left: 59 60, on right: 58 60 62
array_call (84)
    on left: 61, on right: 43
array_call_size (85)
    on left: 62, on right: 61
type_decl (86)
    on left: 63 64, on right: 1 69
type_decl_list (87)
    on left: 65 66, on right: 64 66
subroutine_list (88)
    on left: 67 68, on right: 1 68 69
subroutine (89)
    on left: 69, on right: 68
subroutine_decl (90)
    on left: 70 71 72 73, on right: 69
instruction (91)
    on left: 74 75 76 77 78 79 80 81 82 83 84 85 86, on right: 8 77
    78 79 80 81 82 83


State 0

    0 $accept: . program $end
    1 program: . program_decl type_decl var_decl subroutine_list body '.'
    2 program_decl: . KW_PROGRAM IDENT ';'

    KW_PROGRAM  shift, and go to state 1

    program       go to state 2
    program_decl  go to state 3


State 1

    2 program_decl: KW_PROGRAM . IDENT ';'

    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: program_decl . type_decl var_decl subroutine_list body '.'
   63 type_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE, KW_VAR]
   64          | . KW_TYPE type_decl_list

    KW_TYPE  shift, and go to state 6

    $default  reduce using rule 63 (type_decl)

    type_decl  go to state 7


State 4

    2 program_decl: KW_PROGRAM IDENT . ';'

    ';'  shift, and go to state 8


State 5

    0 $accept: program $end .

    $default  accept


State 6

   64 type_decl: KW_TYPE . type_decl_list
   65 type_decl_list: . IDENT '=' data_type ';'
   66               | . type_decl_list type_decl_list

    IDENT  shift, and go to state 9

    type_decl_list  go to state 10


State 7

    1 program: program_decl type_decl . var_decl subroutine_list body '.'
   52 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   53         | . KW_VAR var_decl_list ';'

    KW_VAR  shift, and go to state 11

    $default  reduce using rule 52 (var_decl)

    var_decl  go to state 12


State 8

    2 program_decl: KW_PROGRAM IDENT ';' .

    $default  reduce using rule 2 (program_decl)


State 9

   65 type_decl_list: IDENT . '=' data_type ';'

    '='  shift, and go to state 13


State 10

   64 type_decl: KW_TYPE type_decl_list .  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE, KW_VAR]
   65 type_decl_list: . IDENT '=' data_type ';'
   66               | . type_decl_list type_decl_list
   66               | type_decl_list . type_decl_list

    IDENT  shift, and go to state 9

    $default  reduce using rule 64 (type_decl)

    type_decl_list  go to state 14


State 11

   53 var_decl: KW_VAR . var_decl_list ';'
   54 var_decl_list: . var_ident ':' data_type
   55              | . var_decl_list ';' var_decl_list
   56 var_ident: . IDENT
   57          | . IDENT ',' var_ident

    IDENT  shift, and go to state 15

    var_decl_list  go to state 16
    var_ident      go to state 17


State 12

    1 program: program_decl type_decl var_decl . subroutine_list body '.'
   67 subroutine_list: . %empty
   68                | . subroutine_list subroutine

    $default  reduce using rule 67 (subroutine_list)

    subroutine_list  go to state 18


State 13

   44 data_type: . KW_INTEGER
   45          | . KW_BOOLEAN
   46          | . KW_CHAR
   47          | . KW_REAL
   48          | . array_decl
   49          | . func_data_type
   50          | . IDENT
   51 func_data_type: . KW_FUNCTION '(' var_decl_list ')' ':' data_type
   58 array_decl: . KW_ARRAY array_size KW_OF data_type
   65 type_decl_list: IDENT '=' . data_type ';'

    IDENT        shift, and go to state 19
    KW_FUNCTION  shift, and go to state 20
    KW_ARRAY     shift, and go to state 21
    KW_BOOLEAN   shift, and go to state 22
    KW_REAL      shift, and go to state 23
    KW_CHAR      shift, and go to state 24
    KW_INTEGER   shift, and go to state 25

    data_type       go to state 26
    func_data_type  go to state 27
    array_decl      go to state 28


State 14

   65 type_decl_list: . IDENT '=' data_type ';'
   66               | . type_decl_list type_decl_list
   66               | type_decl_list . type_decl_list
   66               | type_decl_list type_decl_list .  [IDENT, KW_BEGIN, KW_FUNCTION, KW_PROCEDURE, KW_VAR]

    IDENT  shift, and go to state 9

    IDENT     [reduce using rule 66 (type_decl_list)]
    $default  reduce using rule 66 (type_decl_list)

    type_decl_list  go to state 14


State 15

   56 var_ident: IDENT .  [':']
   57          | IDENT . ',' var_ident

    ','  shift, and go to state 29

    $default  reduce using rule 56 (var_ident)


State 16

   53 var_decl: KW_VAR var_decl_list . ';'
   55 var_decl_list: var_decl_list . ';' var_decl_list

    ';'  shift, and go to state 30


State 17

   54 var_decl_list: var_ident . ':' data_type

    ':'  shift, and go to state 31


State 18

    1 program: program_decl type_decl var_decl subroutine_list . body '.'
    3 body: . KW_BEGIN statements KW_END
   68 subroutine_list: subroutine_list . subroutine
   69 subroutine: . subroutine_decl type_decl var_decl subroutine_list body ';'
   70 subroutine_decl: . KW_PROCEDURE IDENT '(' var_decl_list ')' ';'
   71                | . KW_PROCEDURE IDENT '(' ')' ';'
   72                | . KW_FUNCTION IDENT '(' var_decl_list ')' ':' data_type ';'
   73                | . KW_FUNCTION IDENT '(' ')' ':' data_type ';'

    KW_BEGIN      shift, and go to state 32
    KW_FUNCTION   shift, and go to state 33
    KW_PROCEDURE  shift, and go to state 34

    body             go to state 35
    subroutine       go to state 36
    subroutine_decl  go to state 37


State 19

   50 data_type: IDENT .

    $default  reduce using rule 50 (data_type)


State 20

   51 func_data_type: KW_FUNCTION . '(' var_decl_list ')' ':' data_type

    '('  shift, and go to state 38


State 21

   58 array_decl: KW_ARRAY . array_size KW_OF data_type
   59 array_size: . %empty  [KW_OF]
   60           | . '[' expression ']' array_size

    '['  shift, and go to state 39

    $default  reduce using rule 59 (array_size)

    array_size  go to state 40


State 22

   45 data_type: KW_BOOLEAN .

    $default  reduce using rule 45 (data_type)


State 23

   47 data_type: KW_REAL .

    $default  reduce using rule 47 (data_type)


State 24

   46 data_type: KW_CHAR .

    $default  reduce using rule 46 (data_type)


State 25

   44 data_type: KW_INTEGER .

    $default  reduce using rule 44 (data_type)


State 26

   65 type_decl_list: IDENT '=' data_type . ';'

    ';'  shift, and go to state 41


State 27

   49 data_type: func_data_type .

    $default  reduce using rule 49 (data_type)


State 28

   48 data_type: array_decl .

    $default  reduce using rule 48 (data_type)


State 29

   56 var_ident: . IDENT
   57          | . IDENT ',' var_ident
   57          | IDENT ',' . var_ident

    IDENT  shift, and go to state 15

    var_ident  go to state 42


State 30

   53 var_decl: KW_VAR var_decl_list ';' .  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   54 var_decl_list: . var_ident ':' data_type
   55              | . var_decl_list ';' var_decl_list
   55              | var_decl_list ';' . var_decl_list
   56 var_ident: . IDENT
   57          | . IDENT ',' var_ident

    IDENT  shift, and go to state 15

    $default  reduce using rule 53 (var_decl)

    var_decl_list  go to state 43
    var_ident      go to state 17


State 31

   44 data_type: . KW_INTEGER
   45          | . KW_BOOLEAN
   46          | . KW_CHAR
   47          | . KW_REAL
   48          | . array_decl
   49          | . func_data_type
   50          | . IDENT
   51 func_data_type: . KW_FUNCTION '(' var_decl_list ')' ':' data_type
   54 var_decl_list: var_ident ':' . data_type
   58 array_decl: . KW_ARRAY array_size KW_OF data_type

    IDENT        shift, and go to state 19
    KW_FUNCTION  shift, and go to state 20
    KW_ARRAY     shift, and go to state 21
    KW_BOOLEAN   shift, and go to state 22
    KW_REAL      shift, and go to state 23
    KW_CHAR      shift, and go to state 24
    KW_INTEGER   shift, and go to state 25

    data_type       go to state 44
    func_data_type  go to state 27
    array_decl      go to state 28


State 32

    3 body: . KW_BEGIN statements KW_END
    3     | KW_BEGIN . statements KW_END
    4 statements: . %empty  [KW_END]
    5           | . statement_list
    6 statement_list: . statement
    7               | . statement_list ';' statement
    8 statement: . instruction
    9 proc_call: . IDENT '(' arguments ')'
   74 instruction: . body
   75            | . IDENT ASSIGN expression
   76            | . KW_RESULT ASSIGN expression
   77            | . KW_IF expression KW_THEN instruction
   78            | . KW_IF expression KW_THEN instruction KW_ELSE instruction
   79            | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO instruction
   80            | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO instruction
   81            | . KW_WHILE expression KW_DO instruction
   82            | . KW_REPEAT instruction KW_UNTIL expression
   83            | . IDENT ':' instruction
   84            | . KW_GOTO IDENT
   85            | . KW_RETURN
   86            | . proc_call

    IDENT      shift, and go to state 45
    KW_BEGIN   shift, and go to state 32
    KW_RESULT  shift, and go to state 46
    KW_GOTO    shift, and go to state 47
    KW_RETURN  shift, and go to state 48
    KW_IF      shift, and go to state 49
    KW_FOR     shift, and go to state 50
    KW_REPEAT  shift, and go to state 51
    KW_WHILE   shift, and go to state 52

    $default  reduce using rule 4 (statements)

    body            go to state 53
    statements      go to state 54
    statement_list  go to state 55
    statement       go to state 56
    proc_call       go to state 57
    instruction     go to state 58


State 33

   72 subroutine_decl: KW_FUNCTION . IDENT '(' var_decl_list ')' ':' data_type ';'
   73                | KW_FUNCTION . IDENT '(' ')' ':' data_type ';'

    IDENT  shift, and go to state 59


State 34

   70 subroutine_decl: KW_PROCEDURE . IDENT '(' var_decl_list ')' ';'
   71                | KW_PROCEDURE . IDENT '(' ')' ';'

    IDENT  shift, and go to state 60


State 35

    1 program: program_decl type_decl var_decl subroutine_list body . '.'

    '.'  shift, and go to state 61


State 36

   68 subroutine_list: subroutine_list subroutine .

    $default  reduce using rule 68 (subroutine_list)


State 37

   63 type_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE, KW_VAR]
   64          | . KW_TYPE type_decl_list
   69 subroutine: subroutine_decl . type_decl var_decl subroutine_list body ';'

    KW_TYPE  shift, and go to state 6

    $default  reduce using rule 63 (type_decl)

    type_decl  go to state 62


State 38

   51 func_data_type: KW_FUNCTION '(' . var_decl_list ')' ':' data_type
   54 var_decl_list: . var_ident ':' data_type
   55              | . var_decl_list ';' var_decl_list
   56 var_ident: . IDENT
   57          | . IDENT ',' var_ident

    IDENT  shift, and go to state 15

    var_decl_list  go to state 63
    var_ident      go to state 17


State 39

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   60 array_size: '[' . expression ']' array_size
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 79
    array_call  go to state 80


State 40

   58 array_decl: KW_ARRAY array_size . KW_OF data_type

    KW_OF  shift, and go to state 81


State 41

   65 type_decl_list: IDENT '=' data_type ';' .

    $default  reduce using rule 65 (type_decl_list)


State 42

   57 var_ident: IDENT ',' var_ident .

    $default  reduce using rule 57 (var_ident)


State 43

   55 var_decl_list: var_decl_list . ';' var_decl_list
   55              | var_decl_list ';' var_decl_list .  [';', ')']

    ';'  shift, and go to state 82

    ';'       [reduce using rule 55 (var_decl_list)]
    $default  reduce using rule 55 (var_decl_list)


State 44

   54 var_decl_list: var_ident ':' data_type .

    $default  reduce using rule 54 (var_decl_list)


State 45

    9 proc_call: IDENT . '(' arguments ')'
   75 instruction: IDENT . ASSIGN expression
   83            | IDENT . ':' instruction

    ASSIGN  shift, and go to state 83
    '('     shift, and go to state 84
    ':'     shift, and go to state 85


State 46

   76 instruction: KW_RESULT . ASSIGN expression

    ASSIGN  shift, and go to state 86


State 47

   84 instruction: KW_GOTO . IDENT

    IDENT  shift, and go to state 87


State 48

   85 instruction: KW_RETURN .

    $default  reduce using rule 85 (instruction)


State 49

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size
   77 instruction: KW_IF . expression KW_THEN instruction
   78            | KW_IF . expression KW_THEN instruction KW_ELSE instruction

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 88
    array_call  go to state 80


State 50

   79 instruction: KW_FOR . IDENT ASSIGN expression KW_TO expression KW_DO instruction
   80            | KW_FOR . IDENT ASSIGN expression KW_DOWNTO expression KW_DO instruction

    IDENT  shift, and go to state 89


State 51

    3 body: . KW_BEGIN statements KW_END
    9 proc_call: . IDENT '(' arguments ')'
   74 instruction: . body
   75            | . IDENT ASSIGN expression
   76            | . KW_RESULT ASSIGN expression
   77            | . KW_IF expression KW_THEN instruction
   78            | . KW_IF expression KW_THEN instruction KW_ELSE instruction
   79            | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO instruction
   80            | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO instruction
   81            | . KW_WHILE expression KW_DO instruction
   82            | . KW_REPEAT instruction KW_UNTIL expression
   82            | KW_REPEAT . instruction KW_UNTIL expression
   83            | . IDENT ':' instruction
   84            | . KW_GOTO IDENT
   85            | . KW_RETURN
   86            | . proc_call

    IDENT      shift, and go to state 45
    KW_BEGIN   shift, and go to state 32
    KW_RESULT  shift, and go to state 46
    KW_GOTO    shift, and go to state 47
    KW_RETURN  shift, and go to state 48
    KW_IF      shift, and go to state 49
    KW_FOR     shift, and go to state 50
    KW_REPEAT  shift, and go to state 51
    KW_WHILE   shift, and go to state 52

    body         go to state 53
    proc_call    go to state 57
    instruction  go to state 90


State 52

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size
   81 instruction: KW_WHILE . expression KW_DO instruction

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 91
    array_call  go to state 80


State 53

   74 instruction: body .

    $default  reduce using rule 74 (instruction)


State 54

    3 body: KW_BEGIN statements . KW_END

    KW_END  shift, and go to state 92


State 55

    5 statements: statement_list .  [KW_END]
    7 statement_list: statement_list . ';' statement

    ';'  shift, and go to state 93

    $default  reduce using rule 5 (statements)


State 56

    6 statement_list: statement .

    $default  reduce using rule 6 (statement_list)


State 57

   86 instruction: proc_call .

    $default  reduce using rule 86 (instruction)


State 58

    8 statement: instruction .

    $default  reduce using rule 8 (statement)


State 59

   72 subroutine_decl: KW_FUNCTION IDENT . '(' var_decl_list ')' ':' data_type ';'
   73                | KW_FUNCTION IDENT . '(' ')' ':' data_type ';'

    '('  shift, and go to state 94


State 60

   70 subroutine_decl: KW_PROCEDURE IDENT . '(' var_decl_list ')' ';'
   71                | KW_PROCEDURE IDENT . '(' ')' ';'

    '('  shift, and go to state 95


State 61

    1 program: program_decl type_decl var_decl subroutine_list body '.' .

    $default  reduce using rule 1 (program)


State 62

   52 var_decl: . %empty  [KW_BEGIN, KW_FUNCTION, KW_PROCEDURE]
   53         | . KW_VAR var_decl_list ';'
   69 subroutine: subroutine_decl type_decl . var_decl subroutine_list body ';'

    KW_VAR  shift, and go to state 11

    $default  reduce using rule 52 (var_decl)

    var_decl  go to state 96


State 63

   51 func_data_type: KW_FUNCTION '(' var_decl_list . ')' ':' data_type
   55 var_decl_list: var_decl_list . ';' var_decl_list

    ';'  shift, and go to state 82
    ')'  shift, and go to state 97


State 64

    9 proc_call: IDENT . '(' arguments ')'
   16 expression: IDENT .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   61 array_call: IDENT . array_call_size
   62 array_call_size: . '[' expression ']' array_size

    '('  shift, and go to state 84
    '['  shift, and go to state 98

    $default  reduce using rule 16 (expression)

    array_call_size  go to state 99


State 65

   14 expression: POSINT .

    $default  reduce using rule 14 (expression)


State 66

   15 expression: REAL .

    $default  reduce using rule 15 (expression)


State 67

   19 expression: STRING .

    $default  reduce using rule 19 (expression)


State 68

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   31           | KW_NOT . expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 100
    array_call  go to state 80


State 69

   17 expression: KW_TRUE .

    $default  reduce using rule 17 (expression)


State 70

   18 expression: KW_FALSE .

    $default  reduce using rule 18 (expression)


State 71

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   21           | CAST_INTEGER . expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 101
    array_call  go to state 80


State 72

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   22           | CAST_BOOLEAN . expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 102
    array_call  go to state 80


State 73

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   23           | CAST_CHAR . expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 103
    array_call  go to state 80


State 74

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   24           | CAST_REAL . expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 104
    array_call  go to state 80


State 75

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   32           | '-' . expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 105
    array_call  go to state 80


State 76

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   33           | '+' . expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 106
    array_call  go to state 80


State 77

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   20           | '(' . expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 107
    array_call  go to state 80


State 78

   42 expression: proc_call .

    $default  reduce using rule 42 (expression)


State 79

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression
   60 array_size: '[' expression . ']' array_size

    KW_AND        shift, and go to state 108
    KW_DIV        shift, and go to state 109
    KW_MOD        shift, and go to state 110
    KW_OR         shift, and go to state 111
    OP_INEQUAL    shift, and go to state 112
    OP_LESSEQ     shift, and go to state 113
    OP_GREATEREQ  shift, and go to state 114
    '='           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '-'           shift, and go to state 118
    '+'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121
    ']'           shift, and go to state 122


State 80

   43 expression: array_call .

    $default  reduce using rule 43 (expression)


State 81

   44 data_type: . KW_INTEGER
   45          | . KW_BOOLEAN
   46          | . KW_CHAR
   47          | . KW_REAL
   48          | . array_decl
   49          | . func_data_type
   50          | . IDENT
   51 func_data_type: . KW_FUNCTION '(' var_decl_list ')' ':' data_type
   58 array_decl: . KW_ARRAY array_size KW_OF data_type
   58           | KW_ARRAY array_size KW_OF . data_type

    IDENT        shift, and go to state 19
    KW_FUNCTION  shift, and go to state 20
    KW_ARRAY     shift, and go to state 21
    KW_BOOLEAN   shift, and go to state 22
    KW_REAL      shift, and go to state 23
    KW_CHAR      shift, and go to state 24
    KW_INTEGER   shift, and go to state 25

    data_type       go to state 123
    func_data_type  go to state 27
    array_decl      go to state 28


State 82

   54 var_decl_list: . var_ident ':' data_type
   55              | . var_decl_list ';' var_decl_list
   55              | var_decl_list ';' . var_decl_list
   56 var_ident: . IDENT
   57          | . IDENT ',' var_ident

    IDENT  shift, and go to state 15

    var_decl_list  go to state 43
    var_ident      go to state 17


State 83

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size
   75 instruction: IDENT ASSIGN . expression

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 124
    array_call  go to state 80


State 84

    9 proc_call: . IDENT '(' arguments ')'
    9          | IDENT '(' . arguments ')'
   10 arguments: . %empty  [')']
   11          | . arglist
   12 arglist: . expression
   13        | . arglist ',' expression
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    $default  reduce using rule 10 (arguments)

    proc_call   go to state 78
    arguments   go to state 125
    arglist     go to state 126
    expression  go to state 127
    array_call  go to state 80


State 85

    3 body: . KW_BEGIN statements KW_END
    9 proc_call: . IDENT '(' arguments ')'
   74 instruction: . body
   75            | . IDENT ASSIGN expression
   76            | . KW_RESULT ASSIGN expression
   77            | . KW_IF expression KW_THEN instruction
   78            | . KW_IF expression KW_THEN instruction KW_ELSE instruction
   79            | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO instruction
   80            | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO instruction
   81            | . KW_WHILE expression KW_DO instruction
   82            | . KW_REPEAT instruction KW_UNTIL expression
   83            | . IDENT ':' instruction
   83            | IDENT ':' . instruction
   84            | . KW_GOTO IDENT
   85            | . KW_RETURN
   86            | . proc_call

    IDENT      shift, and go to state 45
    KW_BEGIN   shift, and go to state 32
    KW_RESULT  shift, and go to state 46
    KW_GOTO    shift, and go to state 47
    KW_RETURN  shift, and go to state 48
    KW_IF      shift, and go to state 49
    KW_FOR     shift, and go to state 50
    KW_REPEAT  shift, and go to state 51
    KW_WHILE   shift, and go to state 52

    body         go to state 53
    proc_call    go to state 57
    instruction  go to state 128


State 86

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size
   76 instruction: KW_RESULT ASSIGN . expression

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 129
    array_call  go to state 80


State 87

   84 instruction: KW_GOTO IDENT .

    $default  reduce using rule 84 (instruction)


State 88

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression
   77 instruction: KW_IF expression . KW_THEN instruction
   78            | KW_IF expression . KW_THEN instruction KW_ELSE instruction

    KW_AND        shift, and go to state 108
    KW_DIV        shift, and go to state 109
    KW_MOD        shift, and go to state 110
    KW_THEN       shift, and go to state 130
    KW_OR         shift, and go to state 111
    OP_INEQUAL    shift, and go to state 112
    OP_LESSEQ     shift, and go to state 113
    OP_GREATEREQ  shift, and go to state 114
    '='           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '-'           shift, and go to state 118
    '+'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121


State 89

   79 instruction: KW_FOR IDENT . ASSIGN expression KW_TO expression KW_DO instruction
   80            | KW_FOR IDENT . ASSIGN expression KW_DOWNTO expression KW_DO instruction

    ASSIGN  shift, and go to state 131


State 90

   82 instruction: KW_REPEAT instruction . KW_UNTIL expression

    KW_UNTIL  shift, and go to state 132


State 91

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression
   81 instruction: KW_WHILE expression . KW_DO instruction

    KW_AND        shift, and go to state 108
    KW_DIV        shift, and go to state 109
    KW_MOD        shift, and go to state 110
    KW_DO         shift, and go to state 133
    KW_OR         shift, and go to state 111
    OP_INEQUAL    shift, and go to state 112
    OP_LESSEQ     shift, and go to state 113
    OP_GREATEREQ  shift, and go to state 114
    '='           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '-'           shift, and go to state 118
    '+'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121


State 92

    3 body: KW_BEGIN statements KW_END .

    $default  reduce using rule 3 (body)


State 93

    3 body: . KW_BEGIN statements KW_END
    7 statement_list: statement_list ';' . statement
    8 statement: . instruction
    9 proc_call: . IDENT '(' arguments ')'
   74 instruction: . body
   75            | . IDENT ASSIGN expression
   76            | . KW_RESULT ASSIGN expression
   77            | . KW_IF expression KW_THEN instruction
   78            | . KW_IF expression KW_THEN instruction KW_ELSE instruction
   79            | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO instruction
   80            | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO instruction
   81            | . KW_WHILE expression KW_DO instruction
   82            | . KW_REPEAT instruction KW_UNTIL expression
   83            | . IDENT ':' instruction
   84            | . KW_GOTO IDENT
   85            | . KW_RETURN
   86            | . proc_call

    IDENT      shift, and go to state 45
    KW_BEGIN   shift, and go to state 32
    KW_RESULT  shift, and go to state 46
    KW_GOTO    shift, and go to state 47
    KW_RETURN  shift, and go to state 48
    KW_IF      shift, and go to state 49
    KW_FOR     shift, and go to state 50
    KW_REPEAT  shift, and go to state 51
    KW_WHILE   shift, and go to state 52

    body         go to state 53
    statement    go to state 134
    proc_call    go to state 57
    instruction  go to state 58


State 94

   54 var_decl_list: . var_ident ':' data_type
   55              | . var_decl_list ';' var_decl_list
   56 var_ident: . IDENT
   57          | . IDENT ',' var_ident
   72 subroutine_decl: KW_FUNCTION IDENT '(' . var_decl_list ')' ':' data_type ';'
   73                | KW_FUNCTION IDENT '(' . ')' ':' data_type ';'

    IDENT  shift, and go to state 15
    ')'    shift, and go to state 135

    var_decl_list  go to state 136
    var_ident      go to state 17


State 95

   54 var_decl_list: . var_ident ':' data_type
   55              | . var_decl_list ';' var_decl_list
   56 var_ident: . IDENT
   57          | . IDENT ',' var_ident
   70 subroutine_decl: KW_PROCEDURE IDENT '(' . var_decl_list ')' ';'
   71                | KW_PROCEDURE IDENT '(' . ')' ';'

    IDENT  shift, and go to state 15
    ')'    shift, and go to state 137

    var_decl_list  go to state 138
    var_ident      go to state 17


State 96

   67 subroutine_list: . %empty
   68                | . subroutine_list subroutine
   69 subroutine: subroutine_decl type_decl var_decl . subroutine_list body ';'

    $default  reduce using rule 67 (subroutine_list)

    subroutine_list  go to state 139


State 97

   51 func_data_type: KW_FUNCTION '(' var_decl_list ')' . ':' data_type

    ':'  shift, and go to state 140


State 98

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size
   62 array_call_size: '[' . expression ']' array_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 141
    array_call  go to state 80


State 99

   61 array_call: IDENT array_call_size .

    $default  reduce using rule 61 (array_call)


State 100

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   31           | KW_NOT expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    $default  reduce using rule 31 (expression)

    Conflict between rule 31 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 31 and token KW_DIV resolved as reduce (KW_DIV < KW_NOT).
    Conflict between rule 31 and token KW_MOD resolved as reduce (KW_MOD < KW_NOT).
    Conflict between rule 31 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 31 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < KW_NOT).
    Conflict between rule 31 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < KW_NOT).
    Conflict between rule 31 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < KW_NOT).
    Conflict between rule 31 and token '=' resolved as reduce ('=' < KW_NOT).
    Conflict between rule 31 and token '<' resolved as reduce ('<' < KW_NOT).
    Conflict between rule 31 and token '>' resolved as reduce ('>' < KW_NOT).
    Conflict between rule 31 and token '-' resolved as reduce ('-' < KW_NOT).
    Conflict between rule 31 and token '+' resolved as reduce ('+' < KW_NOT).
    Conflict between rule 31 and token '*' resolved as reduce ('*' < KW_NOT).
    Conflict between rule 31 and token '/' resolved as reduce ('/' < KW_NOT).


State 101

   21 expression: CAST_INTEGER expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   25           | expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    $default  reduce using rule 21 (expression)

    Conflict between rule 21 and token KW_AND resolved as reduce (KW_AND < CAST_INTEGER).
    Conflict between rule 21 and token KW_DIV resolved as reduce (KW_DIV < CAST_INTEGER).
    Conflict between rule 21 and token KW_MOD resolved as reduce (KW_MOD < CAST_INTEGER).
    Conflict between rule 21 and token KW_OR resolved as reduce (KW_OR < CAST_INTEGER).
    Conflict between rule 21 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < CAST_INTEGER).
    Conflict between rule 21 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < CAST_INTEGER).
    Conflict between rule 21 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < CAST_INTEGER).
    Conflict between rule 21 and token '=' resolved as reduce ('=' < CAST_INTEGER).
    Conflict between rule 21 and token '<' resolved as reduce ('<' < CAST_INTEGER).
    Conflict between rule 21 and token '>' resolved as reduce ('>' < CAST_INTEGER).
    Conflict between rule 21 and token '-' resolved as reduce ('-' < CAST_INTEGER).
    Conflict between rule 21 and token '+' resolved as reduce ('+' < CAST_INTEGER).
    Conflict between rule 21 and token '*' resolved as reduce ('*' < CAST_INTEGER).
    Conflict between rule 21 and token '/' resolved as reduce ('/' < CAST_INTEGER).


State 102

   22 expression: CAST_BOOLEAN expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   25           | expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    $default  reduce using rule 22 (expression)

    Conflict between rule 22 and token KW_AND resolved as reduce (KW_AND < CAST_BOOLEAN).
    Conflict between rule 22 and token KW_DIV resolved as reduce (KW_DIV < CAST_BOOLEAN).
    Conflict between rule 22 and token KW_MOD resolved as reduce (KW_MOD < CAST_BOOLEAN).
    Conflict between rule 22 and token KW_OR resolved as reduce (KW_OR < CAST_BOOLEAN).
    Conflict between rule 22 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < CAST_BOOLEAN).
    Conflict between rule 22 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < CAST_BOOLEAN).
    Conflict between rule 22 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < CAST_BOOLEAN).
    Conflict between rule 22 and token '=' resolved as reduce ('=' < CAST_BOOLEAN).
    Conflict between rule 22 and token '<' resolved as reduce ('<' < CAST_BOOLEAN).
    Conflict between rule 22 and token '>' resolved as reduce ('>' < CAST_BOOLEAN).
    Conflict between rule 22 and token '-' resolved as reduce ('-' < CAST_BOOLEAN).
    Conflict between rule 22 and token '+' resolved as reduce ('+' < CAST_BOOLEAN).
    Conflict between rule 22 and token '*' resolved as reduce ('*' < CAST_BOOLEAN).
    Conflict between rule 22 and token '/' resolved as reduce ('/' < CAST_BOOLEAN).


State 103

   23 expression: CAST_CHAR expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   25           | expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    $default  reduce using rule 23 (expression)

    Conflict between rule 23 and token KW_AND resolved as reduce (KW_AND < CAST_CHAR).
    Conflict between rule 23 and token KW_DIV resolved as reduce (KW_DIV < CAST_CHAR).
    Conflict between rule 23 and token KW_MOD resolved as reduce (KW_MOD < CAST_CHAR).
    Conflict between rule 23 and token KW_OR resolved as reduce (KW_OR < CAST_CHAR).
    Conflict between rule 23 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < CAST_CHAR).
    Conflict between rule 23 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < CAST_CHAR).
    Conflict between rule 23 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < CAST_CHAR).
    Conflict between rule 23 and token '=' resolved as reduce ('=' < CAST_CHAR).
    Conflict between rule 23 and token '<' resolved as reduce ('<' < CAST_CHAR).
    Conflict between rule 23 and token '>' resolved as reduce ('>' < CAST_CHAR).
    Conflict between rule 23 and token '-' resolved as reduce ('-' < CAST_CHAR).
    Conflict between rule 23 and token '+' resolved as reduce ('+' < CAST_CHAR).
    Conflict between rule 23 and token '*' resolved as reduce ('*' < CAST_CHAR).
    Conflict between rule 23 and token '/' resolved as reduce ('/' < CAST_CHAR).


State 104

   24 expression: CAST_REAL expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   25           | expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    $default  reduce using rule 24 (expression)

    Conflict between rule 24 and token KW_AND resolved as reduce (KW_AND < CAST_REAL).
    Conflict between rule 24 and token KW_DIV resolved as reduce (KW_DIV < CAST_REAL).
    Conflict between rule 24 and token KW_MOD resolved as reduce (KW_MOD < CAST_REAL).
    Conflict between rule 24 and token KW_OR resolved as reduce (KW_OR < CAST_REAL).
    Conflict between rule 24 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < CAST_REAL).
    Conflict between rule 24 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < CAST_REAL).
    Conflict between rule 24 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < CAST_REAL).
    Conflict between rule 24 and token '=' resolved as reduce ('=' < CAST_REAL).
    Conflict between rule 24 and token '<' resolved as reduce ('<' < CAST_REAL).
    Conflict between rule 24 and token '>' resolved as reduce ('>' < CAST_REAL).
    Conflict between rule 24 and token '-' resolved as reduce ('-' < CAST_REAL).
    Conflict between rule 24 and token '+' resolved as reduce ('+' < CAST_REAL).
    Conflict between rule 24 and token '*' resolved as reduce ('*' < CAST_REAL).
    Conflict between rule 24 and token '/' resolved as reduce ('/' < CAST_REAL).


State 105

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   32           | '-' expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    $default  reduce using rule 32 (expression)

    Conflict between rule 32 and token KW_AND resolved as reduce (KW_AND < UMINUS).
    Conflict between rule 32 and token KW_DIV resolved as reduce (KW_DIV < UMINUS).
    Conflict between rule 32 and token KW_MOD resolved as reduce (KW_MOD < UMINUS).
    Conflict between rule 32 and token KW_OR resolved as reduce (KW_OR < UMINUS).
    Conflict between rule 32 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < UMINUS).
    Conflict between rule 32 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < UMINUS).
    Conflict between rule 32 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < UMINUS).
    Conflict between rule 32 and token '=' resolved as reduce ('=' < UMINUS).
    Conflict between rule 32 and token '<' resolved as reduce ('<' < UMINUS).
    Conflict between rule 32 and token '>' resolved as reduce ('>' < UMINUS).
    Conflict between rule 32 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 32 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 32 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 32 and token '/' resolved as reduce ('/' < UMINUS).


State 106

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   33           | '+' expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    $default  reduce using rule 33 (expression)

    Conflict between rule 33 and token KW_AND resolved as reduce (KW_AND < UPLUS).
    Conflict between rule 33 and token KW_DIV resolved as reduce (KW_DIV < UPLUS).
    Conflict between rule 33 and token KW_MOD resolved as reduce (KW_MOD < UPLUS).
    Conflict between rule 33 and token KW_OR resolved as reduce (KW_OR < UPLUS).
    Conflict between rule 33 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < UPLUS).
    Conflict between rule 33 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < UPLUS).
    Conflict between rule 33 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < UPLUS).
    Conflict between rule 33 and token '=' resolved as reduce ('=' < UPLUS).
    Conflict between rule 33 and token '<' resolved as reduce ('<' < UPLUS).
    Conflict between rule 33 and token '>' resolved as reduce ('>' < UPLUS).
    Conflict between rule 33 and token '-' resolved as reduce ('-' < UPLUS).
    Conflict between rule 33 and token '+' resolved as reduce ('+' < UPLUS).
    Conflict between rule 33 and token '*' resolved as reduce ('*' < UPLUS).
    Conflict between rule 33 and token '/' resolved as reduce ('/' < UPLUS).


State 107

   20 expression: '(' expression . ')'
   25           | expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    KW_AND        shift, and go to state 108
    KW_DIV        shift, and go to state 109
    KW_MOD        shift, and go to state 110
    KW_OR         shift, and go to state 111
    OP_INEQUAL    shift, and go to state 112
    OP_LESSEQ     shift, and go to state 113
    OP_GREATEREQ  shift, and go to state 114
    '='           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '-'           shift, and go to state 118
    '+'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121
    ')'           shift, and go to state 142


State 108

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   40           | expression KW_AND . expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 143
    array_call  go to state 80


State 109

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   29           | expression KW_DIV . expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 144
    array_call  go to state 80


State 110

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   30           | expression KW_MOD . expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 145
    array_call  go to state 80


State 111

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   41           | expression KW_OR . expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 146
    array_call  go to state 80


State 112

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   35           | expression OP_INEQUAL . expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 147
    array_call  go to state 80


State 113

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   38           | expression OP_LESSEQ . expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 148
    array_call  go to state 80


State 114

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   39           | expression OP_GREATEREQ . expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 149
    array_call  go to state 80


State 115

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   34           | expression '=' . expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 150
    array_call  go to state 80


State 116

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   36           | expression '<' . expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 151
    array_call  go to state 80


State 117

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   37           | expression '>' . expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 152
    array_call  go to state 80


State 118

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   26           | expression '-' . expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 153
    array_call  go to state 80


State 119

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   25           | expression '+' . expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 154
    array_call  go to state 80


State 120

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   27           | expression '*' . expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 155
    array_call  go to state 80


State 121

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   28           | expression '/' . expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 156
    array_call  go to state 80


State 122

   59 array_size: . %empty  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_OF, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   60           | . '[' expression ']' array_size
   60           | '[' expression ']' . array_size

    '['  shift, and go to state 39

    $default  reduce using rule 59 (array_size)

    array_size  go to state 157


State 123

   58 array_decl: KW_ARRAY array_size KW_OF data_type .

    $default  reduce using rule 58 (array_decl)


State 124

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression
   75 instruction: IDENT ASSIGN expression .  [KW_END, KW_ELSE, KW_UNTIL, ';']

    KW_AND        shift, and go to state 108
    KW_DIV        shift, and go to state 109
    KW_MOD        shift, and go to state 110
    KW_OR         shift, and go to state 111
    OP_INEQUAL    shift, and go to state 112
    OP_LESSEQ     shift, and go to state 113
    OP_GREATEREQ  shift, and go to state 114
    '='           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '-'           shift, and go to state 118
    '+'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121

    $default  reduce using rule 75 (instruction)


State 125

    9 proc_call: IDENT '(' arguments . ')'

    ')'  shift, and go to state 158


State 126

   11 arguments: arglist .  [')']
   13 arglist: arglist . ',' expression

    ','  shift, and go to state 159

    $default  reduce using rule 11 (arguments)


State 127

   12 arglist: expression .  [')', ',']
   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    KW_AND        shift, and go to state 108
    KW_DIV        shift, and go to state 109
    KW_MOD        shift, and go to state 110
    KW_OR         shift, and go to state 111
    OP_INEQUAL    shift, and go to state 112
    OP_LESSEQ     shift, and go to state 113
    OP_GREATEREQ  shift, and go to state 114
    '='           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '-'           shift, and go to state 118
    '+'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121

    $default  reduce using rule 12 (arglist)


State 128

   83 instruction: IDENT ':' instruction .

    $default  reduce using rule 83 (instruction)


State 129

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression
   76 instruction: KW_RESULT ASSIGN expression .  [KW_END, KW_ELSE, KW_UNTIL, ';']

    KW_AND        shift, and go to state 108
    KW_DIV        shift, and go to state 109
    KW_MOD        shift, and go to state 110
    KW_OR         shift, and go to state 111
    OP_INEQUAL    shift, and go to state 112
    OP_LESSEQ     shift, and go to state 113
    OP_GREATEREQ  shift, and go to state 114
    '='           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '-'           shift, and go to state 118
    '+'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121

    $default  reduce using rule 76 (instruction)


State 130

    3 body: . KW_BEGIN statements KW_END
    9 proc_call: . IDENT '(' arguments ')'
   74 instruction: . body
   75            | . IDENT ASSIGN expression
   76            | . KW_RESULT ASSIGN expression
   77            | . KW_IF expression KW_THEN instruction
   77            | KW_IF expression KW_THEN . instruction
   78            | . KW_IF expression KW_THEN instruction KW_ELSE instruction
   78            | KW_IF expression KW_THEN . instruction KW_ELSE instruction
   79            | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO instruction
   80            | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO instruction
   81            | . KW_WHILE expression KW_DO instruction
   82            | . KW_REPEAT instruction KW_UNTIL expression
   83            | . IDENT ':' instruction
   84            | . KW_GOTO IDENT
   85            | . KW_RETURN
   86            | . proc_call

    IDENT      shift, and go to state 45
    KW_BEGIN   shift, and go to state 32
    KW_RESULT  shift, and go to state 46
    KW_GOTO    shift, and go to state 47
    KW_RETURN  shift, and go to state 48
    KW_IF      shift, and go to state 49
    KW_FOR     shift, and go to state 50
    KW_REPEAT  shift, and go to state 51
    KW_WHILE   shift, and go to state 52

    body         go to state 53
    proc_call    go to state 57
    instruction  go to state 160


State 131

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size
   79 instruction: KW_FOR IDENT ASSIGN . expression KW_TO expression KW_DO instruction
   80            | KW_FOR IDENT ASSIGN . expression KW_DOWNTO expression KW_DO instruction

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 161
    array_call  go to state 80


State 132

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size
   82 instruction: KW_REPEAT instruction KW_UNTIL . expression

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 162
    array_call  go to state 80


State 133

    3 body: . KW_BEGIN statements KW_END
    9 proc_call: . IDENT '(' arguments ')'
   74 instruction: . body
   75            | . IDENT ASSIGN expression
   76            | . KW_RESULT ASSIGN expression
   77            | . KW_IF expression KW_THEN instruction
   78            | . KW_IF expression KW_THEN instruction KW_ELSE instruction
   79            | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO instruction
   80            | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO instruction
   81            | . KW_WHILE expression KW_DO instruction
   81            | KW_WHILE expression KW_DO . instruction
   82            | . KW_REPEAT instruction KW_UNTIL expression
   83            | . IDENT ':' instruction
   84            | . KW_GOTO IDENT
   85            | . KW_RETURN
   86            | . proc_call

    IDENT      shift, and go to state 45
    KW_BEGIN   shift, and go to state 32
    KW_RESULT  shift, and go to state 46
    KW_GOTO    shift, and go to state 47
    KW_RETURN  shift, and go to state 48
    KW_IF      shift, and go to state 49
    KW_FOR     shift, and go to state 50
    KW_REPEAT  shift, and go to state 51
    KW_WHILE   shift, and go to state 52

    body         go to state 53
    proc_call    go to state 57
    instruction  go to state 163


State 134

    7 statement_list: statement_list ';' statement .

    $default  reduce using rule 7 (statement_list)


State 135

   73 subroutine_decl: KW_FUNCTION IDENT '(' ')' . ':' data_type ';'

    ':'  shift, and go to state 164


State 136

   55 var_decl_list: var_decl_list . ';' var_decl_list
   72 subroutine_decl: KW_FUNCTION IDENT '(' var_decl_list . ')' ':' data_type ';'

    ';'  shift, and go to state 82
    ')'  shift, and go to state 165


State 137

   71 subroutine_decl: KW_PROCEDURE IDENT '(' ')' . ';'

    ';'  shift, and go to state 166


State 138

   55 var_decl_list: var_decl_list . ';' var_decl_list
   70 subroutine_decl: KW_PROCEDURE IDENT '(' var_decl_list . ')' ';'

    ';'  shift, and go to state 82
    ')'  shift, and go to state 167


State 139

    3 body: . KW_BEGIN statements KW_END
   68 subroutine_list: subroutine_list . subroutine
   69 subroutine: . subroutine_decl type_decl var_decl subroutine_list body ';'
   69           | subroutine_decl type_decl var_decl subroutine_list . body ';'
   70 subroutine_decl: . KW_PROCEDURE IDENT '(' var_decl_list ')' ';'
   71                | . KW_PROCEDURE IDENT '(' ')' ';'
   72                | . KW_FUNCTION IDENT '(' var_decl_list ')' ':' data_type ';'
   73                | . KW_FUNCTION IDENT '(' ')' ':' data_type ';'

    KW_BEGIN      shift, and go to state 32
    KW_FUNCTION   shift, and go to state 33
    KW_PROCEDURE  shift, and go to state 34

    body             go to state 168
    subroutine       go to state 36
    subroutine_decl  go to state 37


State 140

   44 data_type: . KW_INTEGER
   45          | . KW_BOOLEAN
   46          | . KW_CHAR
   47          | . KW_REAL
   48          | . array_decl
   49          | . func_data_type
   50          | . IDENT
   51 func_data_type: . KW_FUNCTION '(' var_decl_list ')' ':' data_type
   51               | KW_FUNCTION '(' var_decl_list ')' ':' . data_type
   58 array_decl: . KW_ARRAY array_size KW_OF data_type

    IDENT        shift, and go to state 19
    KW_FUNCTION  shift, and go to state 20
    KW_ARRAY     shift, and go to state 21
    KW_BOOLEAN   shift, and go to state 22
    KW_REAL      shift, and go to state 23
    KW_CHAR      shift, and go to state 24
    KW_INTEGER   shift, and go to state 25

    data_type       go to state 169
    func_data_type  go to state 27
    array_decl      go to state 28


State 141

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression
   62 array_call_size: '[' expression . ']' array_size

    KW_AND        shift, and go to state 108
    KW_DIV        shift, and go to state 109
    KW_MOD        shift, and go to state 110
    KW_OR         shift, and go to state 111
    OP_INEQUAL    shift, and go to state 112
    OP_LESSEQ     shift, and go to state 113
    OP_GREATEREQ  shift, and go to state 114
    '='           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '-'           shift, and go to state 118
    '+'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121
    ']'           shift, and go to state 170


State 142

   20 expression: '(' expression ')' .

    $default  reduce using rule 20 (expression)


State 143

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   40           | expression KW_AND expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, ';', ')', ',', ']']
   41           | expression . KW_OR expression

    KW_DIV        shift, and go to state 109
    KW_MOD        shift, and go to state 110
    OP_INEQUAL    shift, and go to state 112
    OP_LESSEQ     shift, and go to state 113
    OP_GREATEREQ  shift, and go to state 114
    '='           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '-'           shift, and go to state 118
    '+'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121

    $default  reduce using rule 40 (expression)

    Conflict between rule 40 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 40 and token KW_DIV resolved as shift (KW_AND < KW_DIV).
    Conflict between rule 40 and token KW_MOD resolved as shift (KW_AND < KW_MOD).
    Conflict between rule 40 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 40 and token OP_INEQUAL resolved as shift (KW_AND < OP_INEQUAL).
    Conflict between rule 40 and token OP_LESSEQ resolved as shift (KW_AND < OP_LESSEQ).
    Conflict between rule 40 and token OP_GREATEREQ resolved as shift (KW_AND < OP_GREATEREQ).
    Conflict between rule 40 and token '=' resolved as shift (KW_AND < '=').
    Conflict between rule 40 and token '<' resolved as shift (KW_AND < '<').
    Conflict between rule 40 and token '>' resolved as shift (KW_AND < '>').
    Conflict between rule 40 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 40 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 40 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 40 and token '/' resolved as shift (KW_AND < '/').


State 144

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   29           | expression KW_DIV expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    $default  reduce using rule 29 (expression)

    Conflict between rule 29 and token KW_AND resolved as reduce (KW_AND < KW_DIV).
    Conflict between rule 29 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 29 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 29 and token KW_OR resolved as reduce (KW_OR < KW_DIV).
    Conflict between rule 29 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < KW_DIV).
    Conflict between rule 29 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < KW_DIV).
    Conflict between rule 29 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < KW_DIV).
    Conflict between rule 29 and token '=' resolved as reduce ('=' < KW_DIV).
    Conflict between rule 29 and token '<' resolved as reduce ('<' < KW_DIV).
    Conflict between rule 29 and token '>' resolved as reduce ('>' < KW_DIV).
    Conflict between rule 29 and token '-' resolved as reduce ('-' < KW_DIV).
    Conflict between rule 29 and token '+' resolved as reduce ('+' < KW_DIV).
    Conflict between rule 29 and token '*' resolved as reduce (%left '*').
    Conflict between rule 29 and token '/' resolved as reduce (%left '/').


State 145

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   30           | expression KW_MOD expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    $default  reduce using rule 30 (expression)

    Conflict between rule 30 and token KW_AND resolved as reduce (KW_AND < KW_MOD).
    Conflict between rule 30 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 30 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 30 and token KW_OR resolved as reduce (KW_OR < KW_MOD).
    Conflict between rule 30 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < KW_MOD).
    Conflict between rule 30 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < KW_MOD).
    Conflict between rule 30 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < KW_MOD).
    Conflict between rule 30 and token '=' resolved as reduce ('=' < KW_MOD).
    Conflict between rule 30 and token '<' resolved as reduce ('<' < KW_MOD).
    Conflict between rule 30 and token '>' resolved as reduce ('>' < KW_MOD).
    Conflict between rule 30 and token '-' resolved as reduce ('-' < KW_MOD).
    Conflict between rule 30 and token '+' resolved as reduce ('+' < KW_MOD).
    Conflict between rule 30 and token '*' resolved as reduce (%left '*').
    Conflict between rule 30 and token '/' resolved as reduce (%left '/').


State 146

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression
   41           | expression KW_OR expression .  [KW_END, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, ';', ')', ',', ']']

    KW_AND        shift, and go to state 108
    KW_DIV        shift, and go to state 109
    KW_MOD        shift, and go to state 110
    OP_INEQUAL    shift, and go to state 112
    OP_LESSEQ     shift, and go to state 113
    OP_GREATEREQ  shift, and go to state 114
    '='           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '-'           shift, and go to state 118
    '+'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121

    $default  reduce using rule 41 (expression)

    Conflict between rule 41 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 41 and token KW_DIV resolved as shift (KW_OR < KW_DIV).
    Conflict between rule 41 and token KW_MOD resolved as shift (KW_OR < KW_MOD).
    Conflict between rule 41 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 41 and token OP_INEQUAL resolved as shift (KW_OR < OP_INEQUAL).
    Conflict between rule 41 and token OP_LESSEQ resolved as shift (KW_OR < OP_LESSEQ).
    Conflict between rule 41 and token OP_GREATEREQ resolved as shift (KW_OR < OP_GREATEREQ).
    Conflict between rule 41 and token '=' resolved as shift (KW_OR < '=').
    Conflict between rule 41 and token '<' resolved as shift (KW_OR < '<').
    Conflict between rule 41 and token '>' resolved as shift (KW_OR < '>').
    Conflict between rule 41 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 41 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 41 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 41 and token '/' resolved as shift (KW_OR < '/').


State 147

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   35           | expression OP_INEQUAL expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', ';', ')', ',', ']']
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    KW_DIV  shift, and go to state 109
    KW_MOD  shift, and go to state 110
    '-'     shift, and go to state 118
    '+'     shift, and go to state 119
    '*'     shift, and go to state 120
    '/'     shift, and go to state 121

    $default  reduce using rule 35 (expression)

    Conflict between rule 35 and token KW_AND resolved as reduce (KW_AND < OP_INEQUAL).
    Conflict between rule 35 and token KW_DIV resolved as shift (OP_INEQUAL < KW_DIV).
    Conflict between rule 35 and token KW_MOD resolved as shift (OP_INEQUAL < KW_MOD).
    Conflict between rule 35 and token KW_OR resolved as reduce (KW_OR < OP_INEQUAL).
    Conflict between rule 35 and token OP_INEQUAL resolved as reduce (%left OP_INEQUAL).
    Conflict between rule 35 and token OP_LESSEQ resolved as reduce (%left OP_LESSEQ).
    Conflict between rule 35 and token OP_GREATEREQ resolved as reduce (%left OP_GREATEREQ).
    Conflict between rule 35 and token '=' resolved as reduce (%left '=').
    Conflict between rule 35 and token '<' resolved as reduce (%left '<').
    Conflict between rule 35 and token '>' resolved as reduce (%left '>').
    Conflict between rule 35 and token '-' resolved as shift (OP_INEQUAL < '-').
    Conflict between rule 35 and token '+' resolved as shift (OP_INEQUAL < '+').
    Conflict between rule 35 and token '*' resolved as shift (OP_INEQUAL < '*').
    Conflict between rule 35 and token '/' resolved as shift (OP_INEQUAL < '/').


State 148

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   38           | expression OP_LESSEQ expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', ';', ')', ',', ']']
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    KW_DIV  shift, and go to state 109
    KW_MOD  shift, and go to state 110
    '-'     shift, and go to state 118
    '+'     shift, and go to state 119
    '*'     shift, and go to state 120
    '/'     shift, and go to state 121

    $default  reduce using rule 38 (expression)

    Conflict between rule 38 and token KW_AND resolved as reduce (KW_AND < OP_LESSEQ).
    Conflict between rule 38 and token KW_DIV resolved as shift (OP_LESSEQ < KW_DIV).
    Conflict between rule 38 and token KW_MOD resolved as shift (OP_LESSEQ < KW_MOD).
    Conflict between rule 38 and token KW_OR resolved as reduce (KW_OR < OP_LESSEQ).
    Conflict between rule 38 and token OP_INEQUAL resolved as reduce (%left OP_INEQUAL).
    Conflict between rule 38 and token OP_LESSEQ resolved as reduce (%left OP_LESSEQ).
    Conflict between rule 38 and token OP_GREATEREQ resolved as reduce (%left OP_GREATEREQ).
    Conflict between rule 38 and token '=' resolved as reduce (%left '=').
    Conflict between rule 38 and token '<' resolved as reduce (%left '<').
    Conflict between rule 38 and token '>' resolved as reduce (%left '>').
    Conflict between rule 38 and token '-' resolved as shift (OP_LESSEQ < '-').
    Conflict between rule 38 and token '+' resolved as shift (OP_LESSEQ < '+').
    Conflict between rule 38 and token '*' resolved as shift (OP_LESSEQ < '*').
    Conflict between rule 38 and token '/' resolved as shift (OP_LESSEQ < '/').


State 149

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   39           | expression OP_GREATEREQ expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', ';', ')', ',', ']']
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    KW_DIV  shift, and go to state 109
    KW_MOD  shift, and go to state 110
    '-'     shift, and go to state 118
    '+'     shift, and go to state 119
    '*'     shift, and go to state 120
    '/'     shift, and go to state 121

    $default  reduce using rule 39 (expression)

    Conflict between rule 39 and token KW_AND resolved as reduce (KW_AND < OP_GREATEREQ).
    Conflict between rule 39 and token KW_DIV resolved as shift (OP_GREATEREQ < KW_DIV).
    Conflict between rule 39 and token KW_MOD resolved as shift (OP_GREATEREQ < KW_MOD).
    Conflict between rule 39 and token KW_OR resolved as reduce (KW_OR < OP_GREATEREQ).
    Conflict between rule 39 and token OP_INEQUAL resolved as reduce (%left OP_INEQUAL).
    Conflict between rule 39 and token OP_LESSEQ resolved as reduce (%left OP_LESSEQ).
    Conflict between rule 39 and token OP_GREATEREQ resolved as reduce (%left OP_GREATEREQ).
    Conflict between rule 39 and token '=' resolved as reduce (%left '=').
    Conflict between rule 39 and token '<' resolved as reduce (%left '<').
    Conflict between rule 39 and token '>' resolved as reduce (%left '>').
    Conflict between rule 39 and token '-' resolved as shift (OP_GREATEREQ < '-').
    Conflict between rule 39 and token '+' resolved as shift (OP_GREATEREQ < '+').
    Conflict between rule 39 and token '*' resolved as shift (OP_GREATEREQ < '*').
    Conflict between rule 39 and token '/' resolved as shift (OP_GREATEREQ < '/').


State 150

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   34           | expression '=' expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', ';', ')', ',', ']']
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    KW_DIV  shift, and go to state 109
    KW_MOD  shift, and go to state 110
    '-'     shift, and go to state 118
    '+'     shift, and go to state 119
    '*'     shift, and go to state 120
    '/'     shift, and go to state 121

    $default  reduce using rule 34 (expression)

    Conflict between rule 34 and token KW_AND resolved as reduce (KW_AND < '=').
    Conflict between rule 34 and token KW_DIV resolved as shift ('=' < KW_DIV).
    Conflict between rule 34 and token KW_MOD resolved as shift ('=' < KW_MOD).
    Conflict between rule 34 and token KW_OR resolved as reduce (KW_OR < '=').
    Conflict between rule 34 and token OP_INEQUAL resolved as reduce (%left OP_INEQUAL).
    Conflict between rule 34 and token OP_LESSEQ resolved as reduce (%left OP_LESSEQ).
    Conflict between rule 34 and token OP_GREATEREQ resolved as reduce (%left OP_GREATEREQ).
    Conflict between rule 34 and token '=' resolved as reduce (%left '=').
    Conflict between rule 34 and token '<' resolved as reduce (%left '<').
    Conflict between rule 34 and token '>' resolved as reduce (%left '>').
    Conflict between rule 34 and token '-' resolved as shift ('=' < '-').
    Conflict between rule 34 and token '+' resolved as shift ('=' < '+').
    Conflict between rule 34 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 34 and token '/' resolved as shift ('=' < '/').


State 151

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   36           | expression '<' expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', ';', ')', ',', ']']
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    KW_DIV  shift, and go to state 109
    KW_MOD  shift, and go to state 110
    '-'     shift, and go to state 118
    '+'     shift, and go to state 119
    '*'     shift, and go to state 120
    '/'     shift, and go to state 121

    $default  reduce using rule 36 (expression)

    Conflict between rule 36 and token KW_AND resolved as reduce (KW_AND < '<').
    Conflict between rule 36 and token KW_DIV resolved as shift ('<' < KW_DIV).
    Conflict between rule 36 and token KW_MOD resolved as shift ('<' < KW_MOD).
    Conflict between rule 36 and token KW_OR resolved as reduce (KW_OR < '<').
    Conflict between rule 36 and token OP_INEQUAL resolved as reduce (%left OP_INEQUAL).
    Conflict between rule 36 and token OP_LESSEQ resolved as reduce (%left OP_LESSEQ).
    Conflict between rule 36 and token OP_GREATEREQ resolved as reduce (%left OP_GREATEREQ).
    Conflict between rule 36 and token '=' resolved as reduce (%left '=').
    Conflict between rule 36 and token '<' resolved as reduce (%left '<').
    Conflict between rule 36 and token '>' resolved as reduce (%left '>').
    Conflict between rule 36 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 36 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 36 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 36 and token '/' resolved as shift ('<' < '/').


State 152

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   37           | expression '>' expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', ';', ')', ',', ']']
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    KW_DIV  shift, and go to state 109
    KW_MOD  shift, and go to state 110
    '-'     shift, and go to state 118
    '+'     shift, and go to state 119
    '*'     shift, and go to state 120
    '/'     shift, and go to state 121

    $default  reduce using rule 37 (expression)

    Conflict between rule 37 and token KW_AND resolved as reduce (KW_AND < '>').
    Conflict between rule 37 and token KW_DIV resolved as shift ('>' < KW_DIV).
    Conflict between rule 37 and token KW_MOD resolved as shift ('>' < KW_MOD).
    Conflict between rule 37 and token KW_OR resolved as reduce (KW_OR < '>').
    Conflict between rule 37 and token OP_INEQUAL resolved as reduce (%left OP_INEQUAL).
    Conflict between rule 37 and token OP_LESSEQ resolved as reduce (%left OP_LESSEQ).
    Conflict between rule 37 and token OP_GREATEREQ resolved as reduce (%left OP_GREATEREQ).
    Conflict between rule 37 and token '=' resolved as reduce (%left '=').
    Conflict between rule 37 and token '<' resolved as reduce (%left '<').
    Conflict between rule 37 and token '>' resolved as reduce (%left '>').
    Conflict between rule 37 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 37 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 37 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 37 and token '/' resolved as shift ('>' < '/').


State 153

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   26           | expression '-' expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', ';', ')', ',', ']']
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    KW_DIV  shift, and go to state 109
    KW_MOD  shift, and go to state 110
    '*'     shift, and go to state 120
    '/'     shift, and go to state 121

    $default  reduce using rule 26 (expression)

    Conflict between rule 26 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 26 and token KW_DIV resolved as shift ('-' < KW_DIV).
    Conflict between rule 26 and token KW_MOD resolved as shift ('-' < KW_MOD).
    Conflict between rule 26 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 26 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < '-').
    Conflict between rule 26 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < '-').
    Conflict between rule 26 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < '-').
    Conflict between rule 26 and token '=' resolved as reduce ('=' < '-').
    Conflict between rule 26 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 26 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 26 and token '-' resolved as reduce (%left '-').
    Conflict between rule 26 and token '+' resolved as reduce (%left '+').
    Conflict between rule 26 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 26 and token '/' resolved as shift ('-' < '/').


State 154

   25 expression: expression . '+' expression
   25           | expression '+' expression .  [KW_END, KW_AND, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', ';', ')', ',', ']']
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    KW_DIV  shift, and go to state 109
    KW_MOD  shift, and go to state 110
    '*'     shift, and go to state 120
    '/'     shift, and go to state 121

    $default  reduce using rule 25 (expression)

    Conflict between rule 25 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 25 and token KW_DIV resolved as shift ('+' < KW_DIV).
    Conflict between rule 25 and token KW_MOD resolved as shift ('+' < KW_MOD).
    Conflict between rule 25 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 25 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < '+').
    Conflict between rule 25 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < '+').
    Conflict between rule 25 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < '+').
    Conflict between rule 25 and token '=' resolved as reduce ('=' < '+').
    Conflict between rule 25 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 25 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 25 and token '-' resolved as reduce (%left '-').
    Conflict between rule 25 and token '+' resolved as reduce (%left '+').
    Conflict between rule 25 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 25 and token '/' resolved as shift ('+' < '/').


State 155

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   27           | expression '*' expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    $default  reduce using rule 27 (expression)

    Conflict between rule 27 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 27 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 27 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 27 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 27 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < '*').
    Conflict between rule 27 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < '*').
    Conflict between rule 27 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < '*').
    Conflict between rule 27 and token '=' resolved as reduce ('=' < '*').
    Conflict between rule 27 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 27 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 27 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 27 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 27 and token '*' resolved as reduce (%left '*').
    Conflict between rule 27 and token '/' resolved as reduce (%left '/').


State 156

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   28           | expression '/' expression .  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    $default  reduce using rule 28 (expression)

    Conflict between rule 28 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 28 and token KW_DIV resolved as reduce (%left KW_DIV).
    Conflict between rule 28 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 28 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 28 and token OP_INEQUAL resolved as reduce (OP_INEQUAL < '/').
    Conflict between rule 28 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < '/').
    Conflict between rule 28 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < '/').
    Conflict between rule 28 and token '=' resolved as reduce ('=' < '/').
    Conflict between rule 28 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 28 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 28 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 28 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 28 and token '*' resolved as reduce (%left '*').
    Conflict between rule 28 and token '/' resolved as reduce (%left '/').


State 157

   60 array_size: '[' expression ']' array_size .

    $default  reduce using rule 60 (array_size)


State 158

    9 proc_call: IDENT '(' arguments ')' .

    $default  reduce using rule 9 (proc_call)


State 159

    9 proc_call: . IDENT '(' arguments ')'
   13 arglist: arglist ',' . expression
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 171
    array_call  go to state 80


State 160

   77 instruction: KW_IF expression KW_THEN instruction .  [KW_END, KW_UNTIL, ';']
   78            | KW_IF expression KW_THEN instruction . KW_ELSE instruction

    KW_ELSE  shift, and go to state 172

    $default  reduce using rule 77 (instruction)

    Conflict between rule 77 and token KW_ELSE resolved as shift (KW_THEN < KW_ELSE).


State 161

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression
   79 instruction: KW_FOR IDENT ASSIGN expression . KW_TO expression KW_DO instruction
   80            | KW_FOR IDENT ASSIGN expression . KW_DOWNTO expression KW_DO instruction

    KW_AND        shift, and go to state 108
    KW_DIV        shift, and go to state 109
    KW_MOD        shift, and go to state 110
    KW_OR         shift, and go to state 111
    KW_TO         shift, and go to state 173
    KW_DOWNTO     shift, and go to state 174
    OP_INEQUAL    shift, and go to state 112
    OP_LESSEQ     shift, and go to state 113
    OP_GREATEREQ  shift, and go to state 114
    '='           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '-'           shift, and go to state 118
    '+'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121


State 162

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression
   82 instruction: KW_REPEAT instruction KW_UNTIL expression .  [KW_END, KW_ELSE, KW_UNTIL, ';']

    KW_AND        shift, and go to state 108
    KW_DIV        shift, and go to state 109
    KW_MOD        shift, and go to state 110
    KW_OR         shift, and go to state 111
    OP_INEQUAL    shift, and go to state 112
    OP_LESSEQ     shift, and go to state 113
    OP_GREATEREQ  shift, and go to state 114
    '='           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '-'           shift, and go to state 118
    '+'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121

    $default  reduce using rule 82 (instruction)


State 163

   81 instruction: KW_WHILE expression KW_DO instruction .

    $default  reduce using rule 81 (instruction)


State 164

   44 data_type: . KW_INTEGER
   45          | . KW_BOOLEAN
   46          | . KW_CHAR
   47          | . KW_REAL
   48          | . array_decl
   49          | . func_data_type
   50          | . IDENT
   51 func_data_type: . KW_FUNCTION '(' var_decl_list ')' ':' data_type
   58 array_decl: . KW_ARRAY array_size KW_OF data_type
   73 subroutine_decl: KW_FUNCTION IDENT '(' ')' ':' . data_type ';'

    IDENT        shift, and go to state 19
    KW_FUNCTION  shift, and go to state 20
    KW_ARRAY     shift, and go to state 21
    KW_BOOLEAN   shift, and go to state 22
    KW_REAL      shift, and go to state 23
    KW_CHAR      shift, and go to state 24
    KW_INTEGER   shift, and go to state 25

    data_type       go to state 175
    func_data_type  go to state 27
    array_decl      go to state 28


State 165

   72 subroutine_decl: KW_FUNCTION IDENT '(' var_decl_list ')' . ':' data_type ';'

    ':'  shift, and go to state 176


State 166

   71 subroutine_decl: KW_PROCEDURE IDENT '(' ')' ';' .

    $default  reduce using rule 71 (subroutine_decl)


State 167

   70 subroutine_decl: KW_PROCEDURE IDENT '(' var_decl_list ')' . ';'

    ';'  shift, and go to state 177


State 168

   69 subroutine: subroutine_decl type_decl var_decl subroutine_list body . ';'

    ';'  shift, and go to state 178


State 169

   51 func_data_type: KW_FUNCTION '(' var_decl_list ')' ':' data_type .

    $default  reduce using rule 51 (func_data_type)


State 170

   59 array_size: . %empty  [KW_END, KW_AND, KW_DIV, KW_MOD, KW_DO, KW_ELSE, KW_THEN, KW_OR, KW_UNTIL, KW_TO, KW_DOWNTO, OP_INEQUAL, OP_LESSEQ, OP_GREATEREQ, '=', '<', '>', '-', '+', '*', '/', ';', ')', ',', ']']
   60           | . '[' expression ']' array_size
   62 array_call_size: '[' expression ']' . array_size

    '['  shift, and go to state 39

    $default  reduce using rule 59 (array_size)

    array_size  go to state 179


State 171

   13 arglist: arglist ',' expression .  [')', ',']
   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression

    KW_AND        shift, and go to state 108
    KW_DIV        shift, and go to state 109
    KW_MOD        shift, and go to state 110
    KW_OR         shift, and go to state 111
    OP_INEQUAL    shift, and go to state 112
    OP_LESSEQ     shift, and go to state 113
    OP_GREATEREQ  shift, and go to state 114
    '='           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '-'           shift, and go to state 118
    '+'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121

    $default  reduce using rule 13 (arglist)


State 172

    3 body: . KW_BEGIN statements KW_END
    9 proc_call: . IDENT '(' arguments ')'
   74 instruction: . body
   75            | . IDENT ASSIGN expression
   76            | . KW_RESULT ASSIGN expression
   77            | . KW_IF expression KW_THEN instruction
   78            | . KW_IF expression KW_THEN instruction KW_ELSE instruction
   78            | KW_IF expression KW_THEN instruction KW_ELSE . instruction
   79            | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO instruction
   80            | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO instruction
   81            | . KW_WHILE expression KW_DO instruction
   82            | . KW_REPEAT instruction KW_UNTIL expression
   83            | . IDENT ':' instruction
   84            | . KW_GOTO IDENT
   85            | . KW_RETURN
   86            | . proc_call

    IDENT      shift, and go to state 45
    KW_BEGIN   shift, and go to state 32
    KW_RESULT  shift, and go to state 46
    KW_GOTO    shift, and go to state 47
    KW_RETURN  shift, and go to state 48
    KW_IF      shift, and go to state 49
    KW_FOR     shift, and go to state 50
    KW_REPEAT  shift, and go to state 51
    KW_WHILE   shift, and go to state 52

    body         go to state 53
    proc_call    go to state 57
    instruction  go to state 180


State 173

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size
   79 instruction: KW_FOR IDENT ASSIGN expression KW_TO . expression KW_DO instruction

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 181
    array_call  go to state 80


State 174

    9 proc_call: . IDENT '(' arguments ')'
   14 expression: . POSINT
   15           | . REAL
   16           | . IDENT
   17           | . KW_TRUE
   18           | . KW_FALSE
   19           | . STRING
   20           | . '(' expression ')'
   21           | . CAST_INTEGER expression
   22           | . CAST_BOOLEAN expression
   23           | . CAST_CHAR expression
   24           | . CAST_REAL expression
   25           | . expression '+' expression
   26           | . expression '-' expression
   27           | . expression '*' expression
   28           | . expression '/' expression
   29           | . expression KW_DIV expression
   30           | . expression KW_MOD expression
   31           | . KW_NOT expression
   32           | . '-' expression
   33           | . '+' expression
   34           | . expression '=' expression
   35           | . expression OP_INEQUAL expression
   36           | . expression '<' expression
   37           | . expression '>' expression
   38           | . expression OP_LESSEQ expression
   39           | . expression OP_GREATEREQ expression
   40           | . expression KW_AND expression
   41           | . expression KW_OR expression
   42           | . proc_call
   43           | . array_call
   61 array_call: . IDENT array_call_size
   80 instruction: KW_FOR IDENT ASSIGN expression KW_DOWNTO . expression KW_DO instruction

    IDENT         shift, and go to state 64
    POSINT        shift, and go to state 65
    REAL          shift, and go to state 66
    STRING        shift, and go to state 67
    KW_NOT        shift, and go to state 68
    KW_TRUE       shift, and go to state 69
    KW_FALSE      shift, and go to state 70
    CAST_INTEGER  shift, and go to state 71
    CAST_BOOLEAN  shift, and go to state 72
    CAST_CHAR     shift, and go to state 73
    CAST_REAL     shift, and go to state 74
    '-'           shift, and go to state 75
    '+'           shift, and go to state 76
    '('           shift, and go to state 77

    proc_call   go to state 78
    expression  go to state 182
    array_call  go to state 80


State 175

   73 subroutine_decl: KW_FUNCTION IDENT '(' ')' ':' data_type . ';'

    ';'  shift, and go to state 183


State 176

   44 data_type: . KW_INTEGER
   45          | . KW_BOOLEAN
   46          | . KW_CHAR
   47          | . KW_REAL
   48          | . array_decl
   49          | . func_data_type
   50          | . IDENT
   51 func_data_type: . KW_FUNCTION '(' var_decl_list ')' ':' data_type
   58 array_decl: . KW_ARRAY array_size KW_OF data_type
   72 subroutine_decl: KW_FUNCTION IDENT '(' var_decl_list ')' ':' . data_type ';'

    IDENT        shift, and go to state 19
    KW_FUNCTION  shift, and go to state 20
    KW_ARRAY     shift, and go to state 21
    KW_BOOLEAN   shift, and go to state 22
    KW_REAL      shift, and go to state 23
    KW_CHAR      shift, and go to state 24
    KW_INTEGER   shift, and go to state 25

    data_type       go to state 184
    func_data_type  go to state 27
    array_decl      go to state 28


State 177

   70 subroutine_decl: KW_PROCEDURE IDENT '(' var_decl_list ')' ';' .

    $default  reduce using rule 70 (subroutine_decl)


State 178

   69 subroutine: subroutine_decl type_decl var_decl subroutine_list body ';' .

    $default  reduce using rule 69 (subroutine)


State 179

   62 array_call_size: '[' expression ']' array_size .

    $default  reduce using rule 62 (array_call_size)


State 180

   78 instruction: KW_IF expression KW_THEN instruction KW_ELSE instruction .

    $default  reduce using rule 78 (instruction)


State 181

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression
   79 instruction: KW_FOR IDENT ASSIGN expression KW_TO expression . KW_DO instruction

    KW_AND        shift, and go to state 108
    KW_DIV        shift, and go to state 109
    KW_MOD        shift, and go to state 110
    KW_DO         shift, and go to state 185
    KW_OR         shift, and go to state 111
    OP_INEQUAL    shift, and go to state 112
    OP_LESSEQ     shift, and go to state 113
    OP_GREATEREQ  shift, and go to state 114
    '='           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '-'           shift, and go to state 118
    '+'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121


State 182

   25 expression: expression . '+' expression
   26           | expression . '-' expression
   27           | expression . '*' expression
   28           | expression . '/' expression
   29           | expression . KW_DIV expression
   30           | expression . KW_MOD expression
   34           | expression . '=' expression
   35           | expression . OP_INEQUAL expression
   36           | expression . '<' expression
   37           | expression . '>' expression
   38           | expression . OP_LESSEQ expression
   39           | expression . OP_GREATEREQ expression
   40           | expression . KW_AND expression
   41           | expression . KW_OR expression
   80 instruction: KW_FOR IDENT ASSIGN expression KW_DOWNTO expression . KW_DO instruction

    KW_AND        shift, and go to state 108
    KW_DIV        shift, and go to state 109
    KW_MOD        shift, and go to state 110
    KW_DO         shift, and go to state 186
    KW_OR         shift, and go to state 111
    OP_INEQUAL    shift, and go to state 112
    OP_LESSEQ     shift, and go to state 113
    OP_GREATEREQ  shift, and go to state 114
    '='           shift, and go to state 115
    '<'           shift, and go to state 116
    '>'           shift, and go to state 117
    '-'           shift, and go to state 118
    '+'           shift, and go to state 119
    '*'           shift, and go to state 120
    '/'           shift, and go to state 121


State 183

   73 subroutine_decl: KW_FUNCTION IDENT '(' ')' ':' data_type ';' .

    $default  reduce using rule 73 (subroutine_decl)


State 184

   72 subroutine_decl: KW_FUNCTION IDENT '(' var_decl_list ')' ':' data_type . ';'

    ';'  shift, and go to state 187


State 185

    3 body: . KW_BEGIN statements KW_END
    9 proc_call: . IDENT '(' arguments ')'
   74 instruction: . body
   75            | . IDENT ASSIGN expression
   76            | . KW_RESULT ASSIGN expression
   77            | . KW_IF expression KW_THEN instruction
   78            | . KW_IF expression KW_THEN instruction KW_ELSE instruction
   79            | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO instruction
   79            | KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO . instruction
   80            | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO instruction
   81            | . KW_WHILE expression KW_DO instruction
   82            | . KW_REPEAT instruction KW_UNTIL expression
   83            | . IDENT ':' instruction
   84            | . KW_GOTO IDENT
   85            | . KW_RETURN
   86            | . proc_call

    IDENT      shift, and go to state 45
    KW_BEGIN   shift, and go to state 32
    KW_RESULT  shift, and go to state 46
    KW_GOTO    shift, and go to state 47
    KW_RETURN  shift, and go to state 48
    KW_IF      shift, and go to state 49
    KW_FOR     shift, and go to state 50
    KW_REPEAT  shift, and go to state 51
    KW_WHILE   shift, and go to state 52

    body         go to state 53
    proc_call    go to state 57
    instruction  go to state 188


State 186

    3 body: . KW_BEGIN statements KW_END
    9 proc_call: . IDENT '(' arguments ')'
   74 instruction: . body
   75            | . IDENT ASSIGN expression
   76            | . KW_RESULT ASSIGN expression
   77            | . KW_IF expression KW_THEN instruction
   78            | . KW_IF expression KW_THEN instruction KW_ELSE instruction
   79            | . KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO instruction
   80            | . KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO instruction
   80            | KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO . instruction
   81            | . KW_WHILE expression KW_DO instruction
   82            | . KW_REPEAT instruction KW_UNTIL expression
   83            | . IDENT ':' instruction
   84            | . KW_GOTO IDENT
   85            | . KW_RETURN
   86            | . proc_call

    IDENT      shift, and go to state 45
    KW_BEGIN   shift, and go to state 32
    KW_RESULT  shift, and go to state 46
    KW_GOTO    shift, and go to state 47
    KW_RETURN  shift, and go to state 48
    KW_IF      shift, and go to state 49
    KW_FOR     shift, and go to state 50
    KW_REPEAT  shift, and go to state 51
    KW_WHILE   shift, and go to state 52

    body         go to state 53
    proc_call    go to state 57
    instruction  go to state 189


State 187

   72 subroutine_decl: KW_FUNCTION IDENT '(' var_decl_list ')' ':' data_type ';' .

    $default  reduce using rule 72 (subroutine_decl)


State 188

   79 instruction: KW_FOR IDENT ASSIGN expression KW_TO expression KW_DO instruction .

    $default  reduce using rule 79 (instruction)


State 189

   80 instruction: KW_FOR IDENT ASSIGN expression KW_DOWNTO expression KW_DO instruction .

    $default  reduce using rule 80 (instruction)
